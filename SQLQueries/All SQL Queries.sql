-- query to calculate the Date from number of days since 2020-01-01
-- SELECT date('2020-01-01', '+' || :number_of_days || ' days') AS calculated_date;
-- query reverse:
-- SELECT JULIANDAY('your_date') - JULIANDAY('2020-01-01') AS days_difference;

--- BEGIN create TABLE DAYS_AGE_RANGE

-- add extra columns to czech TABLE
ALTER TABLE czech ADD COLUMN AGE_2023 INTEGER;
UPDATE czech SET AGE_2023 = strftime('%Y', '2023-01-01') - Rok_narozeni;

ALTER TABLE czech ADD COLUMN DAYSD_20200101 INTEGER;
UPDATE czech SET DAYSD_20200101 = (julianday("DatumUmrti", 'start of day') - julianday('2020-01-01','start of day')) 
WHERE DatumUmrti is not NULL;

ALTER TABLE czech ADD COLUMN DAYSVD1_20200101 INTEGER;
UPDATE czech SET DAYSVD1_20200101 = (julianday("Datum_1", 'start of day') - julianday('2020-01-01', 'start of day')) 
WHERE Datum_1 is not NULL;

COMMIT;

-- Drop the table if it exists
DROP TABLE IF EXISTS DAYS_RANGE;

--Create the table
CREATE TABLE DAYS_RANGE (
    DAYS_20200101 INTEGER
);

-- Insert the days using a recursive CTE
WITH RECURSIVE date_range AS (
    SELECT 0 AS day
    UNION ALL
    SELECT day + 1
    FROM date_range
    WHERE day < (julianday('2024-03-13') - julianday('2020-01-01'))
)
INSERT INTO DAYS_RANGE (DAYS_20200101)
SELECT day FROM date_range;


-- Drop the table if it exists
DROP TABLE IF EXISTS AGE_RANGE;

-- Create the table
CREATE TABLE AGE_RANGE (
    AGE_2023 INTEGER
);

insert into AGE_RANGE select distinct AGE_2023 FROM Czech order by AGE_2023;

-- Drop the table if it exists
DROP TABLE IF EXISTS DAYS_AGE_RANGE;

-- Create the table
CREATE TABLE DAYS_AGE_RANGE (
    DAYS_20200101 INTEGER,
    AGE_2023 INTEGER,
    DAYSD_20200101 INTEGER,
    DAYSVD1_20200101 INTEGER,
	POP_TOTAL INTEGER,
    NUM_D INTEGER,
	CUM_NUM_D INTEGER,
    NUM_VX INTEGER,
    CUM_NUM_VX INTEGER,
	NUM_UVX INTEGER,
    CUM_NUM_UVX INTEGER,
	NUM_VX_D INTEGER,
	CUM_NUM_VX_D INTEGER,
    NUM_UVX_D INTEGER,	
	CUM_NUM_UVX_D INTEGER
);


-- Populate the table with data
INSERT INTO DAYS_AGE_RANGE (DAYS_20200101, AGE_2023)
SELECT d.DAYS_20200101, c.AGE_2023
FROM DAYS_RANGE d
CROSS JOIN (SELECT DISTINCT AGE_2023 FROM AGE_RANGE ORDER BY AGE_2023) c
ORDER BY d.DAYS_20200101, c.AGE_2023;


-- count und update num colums of table DAYS_AGE_RANGE
DROP TABLE IF EXISTS temp_czech;
CREATE TEMPORARY TABLE temp_czech AS
SELECT 
    DAYSD_20200101,
    DAYSVD1_20200101,
    AGE_2023
FROM 
    CZECH;

CREATE INDEX idx_temp_czech_day_age ON temp_czech (DAYSD_20200101, AGE_2023);
CREATE INDEX idx_temp_czech_vd1_age ON temp_czech (DAYSVD1_20200101, AGE_2023);

UPDATE DAYS_AGE_RANGE
SET 
    DAYSD_20200101 = (
        SELECT DAYSD_20200101
        FROM temp_czech t
        WHERE t.DAYSD_20200101 = DAYS_AGE_RANGE.DAYS_20200101
        AND t.AGE_2023 = DAYS_AGE_RANGE.AGE_2023
    );


UPDATE DAYS_AGE_RANGE
SET 
    DAYSVD1_20200101 = (
        SELECT DAYSVD1_20200101
        FROM temp_czech t
        WHERE t.DAYSVD1_20200101 = DAYS_AGE_RANGE.DAYS_20200101
        AND t.AGE_2023 = DAYS_AGE_RANGE.AGE_2023
    );
	
UPDATE DAYS_AGE_RANGE
SET 
    NUM_D = (
        SELECT COUNT(*)
        FROM temp_czech t
        WHERE t.DAYSD_20200101 = DAYS_AGE_RANGE.DAYS_20200101
        AND t.AGE_2023 = DAYS_AGE_RANGE.AGE_2023
    );


UPDATE DAYS_AGE_RANGE
SET 
    NUM_VX = (
        SELECT COUNT(*)
        FROM temp_czech t
        WHERE t.DAYSVD1_20200101 = DAYS_AGE_RANGE.DAYS_20200101
        AND t.AGE_2023 = DAYS_AGE_RANGE.AGE_2023
    );

DROP TABLE temp_czech;

-- calculate cumulative sums CUM_NUM_D,CUM_NUM_VX for specific ages across different days
-- Use a CTE to calculate cumulative sums for specific ages across different days
WITH Cumulative AS (
    SELECT 
        DAYS_20200101,
        AGE_2023,
        SUM(NUM_D) OVER (PARTITION BY AGE_2023 ORDER BY DAYS_20200101 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS CUM_NUM_D,
        SUM(NUM_VX) OVER (PARTITION BY AGE_2023 ORDER BY DAYS_20200101 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS CUM_NUM_VX
    FROM DAYS_AGE_RANGE
)
UPDATE DAYS_AGE_RANGE
SET 
    CUM_NUM_D = Cumulative.CUM_NUM_D,
    CUM_NUM_VX = Cumulative.CUM_NUM_VX
FROM 
    Cumulative
WHERE 
    Cumulative.DAYS_20200101 = DAYS_AGE_RANGE.DAYS_20200101
    AND Cumulative.AGE_2023 = DAYS_AGE_RANGE.AGE_2023;

-- Calculate the total population for each age
WITH TotalPopulation AS (
    SELECT AGE_2023, COUNT(*) AS POP_TOTAL
    FROM czech
    GROUP BY AGE_2023
),
Cum AS (
    SELECT 
        DAYS_20200101,
        AGE_2023,
        CUM_NUM_VX
    FROM DAYS_AGE_RANGE
)
UPDATE DAYS_AGE_RANGE
SET 
    POP_TOTAL = (SELECT POP_TOTAL FROM TotalPopulation WHERE TotalPopulation.AGE_2023 = DAYS_AGE_RANGE.AGE_2023),
    CUM_NUM_UVX = (SELECT POP_TOTAL FROM TotalPopulation WHERE TotalPopulation.AGE_2023 = DAYS_AGE_RANGE.AGE_2023) - Cum.CUM_NUM_VX
FROM 
    Cum
WHERE 
    Cum.DAYS_20200101 = DAYS_AGE_RANGE.DAYS_20200101
    AND Cum.AGE_2023 = DAYS_AGE_RANGE.AGE_2023;

	
-- count and update NUM_UVX_D columne of table DAYS_AGE_RANGE
	
UPDATE DAYS_AGE_RANGE
SET NUM_UVX = NUM_VX * -1;

	
-- count and update NUM_VX_D columne of table DAYS_AGE_RANGE

DROP TABLE IF EXISTS temp_czech;
CREATE TEMPORARY TABLE temp_czech AS
SELECT 
    DAYSD_20200101,
    AGE_2023
FROM CZECH WHERE CZECH.Datum_1 IS NOT NULL AND CZECH.DatumUmrti IS NOT NULL;

CREATE INDEX idx_temp_czech_day_age ON temp_czech (DAYSD_20200101, AGE_2023);


UPDATE DAYS_AGE_RANGE
SET 
    NUM_VX_D = (
        SELECT COUNT(*)
        FROM temp_czech t
        WHERE t.DAYSD_20200101 = DAYS_AGE_RANGE.DAYS_20200101
        AND t.AGE_2023 = DAYS_AGE_RANGE.AGE_2023
    );

DROP TABLE temp_czech;

-- count and update NUM_UVX_D columne of table DAYS_AGE_RANGE

DROP TABLE IF EXISTS temp_czech;
CREATE TEMPORARY TABLE temp_czech AS
SELECT 
    DAYSD_20200101,
    AGE_2023
FROM CZECH WHERE CZECH.Datum_1 IS NULL and CZECH.DatumUmrti IS NOT NULL;

CREATE INDEX idx_temp_czech_day_age ON temp_czech (DAYSD_20200101, AGE_2023);


UPDATE DAYS_AGE_RANGE
SET 
    NUM_UVX_D = (
        SELECT COUNT(*)
        FROM temp_czech t
        WHERE t.DAYSD_20200101 = DAYS_AGE_RANGE.DAYS_20200101
        AND t.AGE_2023 = DAYS_AGE_RANGE.AGE_2023
    );

DROP TABLE temp_czech;
			
-- calculate cumulative sums CUM_NUM_VX_D CUM_NUM_UVX_D  for specific ages across different days	
-- Use a CTE to calculate cumulative sums for specific ages across different days
WITH Cumulative AS (
    SELECT 
        DAYS_20200101,
        AGE_2023,
        SUM(NUM_VX_D) OVER (PARTITION BY AGE_2023 ORDER BY DAYS_20200101 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS CUM_NUM_VX_D,
        SUM(NUM_UVX_D) OVER (PARTITION BY AGE_2023 ORDER BY DAYS_20200101 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS CUM_NUM_UVX_D
    FROM DAYS_AGE_RANGE
)
UPDATE DAYS_AGE_RANGE
SET 
    CUM_NUM_VX_D = Cumulative.CUM_NUM_VX_D,
    CUM_NUM_UVX_D = Cumulative.CUM_NUM_UVX_D
FROM 
    Cumulative
WHERE 
    Cumulative.DAYS_20200101 = DAYS_AGE_RANGE.DAYS_20200101
    AND Cumulative.AGE_2023 = DAYS_AGE_RANGE.AGE_2023;	
	

--- END  create TABLE DAYS_AGE_RANGE


-- create view PVT_POP_TOTAL

DROP VIEW IF EXISTS PVT_POP_TOTAL;
CREATE VIEW PVT_POP_TOTAL AS
SELECT 
    DAYS_20200101,
    SUM(CASE WHEN AgeRange = '0-4' THEN POP_TOTAL ELSE 0 END) AS '0-4',
    SUM(CASE WHEN AgeRange = '5-9' THEN POP_TOTAL ELSE 0 END) AS '5-9',
    SUM(CASE WHEN AgeRange = '10-14' THEN POP_TOTAL ELSE 0 END) AS '10-14',
    SUM(CASE WHEN AgeRange = '15-19' THEN POP_TOTAL ELSE 0 END) AS '15-19',
    SUM(CASE WHEN AgeRange = '20-24' THEN POP_TOTAL ELSE 0 END) AS '20-24',
    SUM(CASE WHEN AgeRange = '25-29' THEN POP_TOTAL ELSE 0 END) AS '25-29',
    SUM(CASE WHEN AgeRange = '30-34' THEN POP_TOTAL ELSE 0 END) AS '30-34',
    SUM(CASE WHEN AgeRange = '35-39' THEN POP_TOTAL ELSE 0 END) AS '35-39',
    SUM(CASE WHEN AgeRange = '40-44' THEN POP_TOTAL ELSE 0 END) AS '40-44',
    SUM(CASE WHEN AgeRange = '45-49' THEN POP_TOTAL ELSE 0 END) AS '45-49',
    SUM(CASE WHEN AgeRange = '50-54' THEN POP_TOTAL ELSE 0 END) AS '50-54',
    SUM(CASE WHEN AgeRange = '55-59' THEN POP_TOTAL ELSE 0 END) AS '55-59',
    SUM(CASE WHEN AgeRange = '60-64' THEN POP_TOTAL ELSE 0 END) AS '60-64',
    SUM(CASE WHEN AgeRange = '65-69' THEN POP_TOTAL ELSE 0 END) AS '65-69',
    SUM(CASE WHEN AgeRange = '70-74' THEN POP_TOTAL ELSE 0 END) AS '70-74',
    SUM(CASE WHEN AgeRange = '75-79' THEN POP_TOTAL ELSE 0 END) AS '75-79',
    SUM(CASE WHEN AgeRange = '80-84' THEN POP_TOTAL ELSE 0 END) AS '80-84',
    SUM(CASE WHEN AgeRange = '85-89' THEN POP_TOTAL ELSE 0 END) AS '85-89',
    SUM(CASE WHEN AgeRange = '90-94' THEN POP_TOTAL ELSE 0 END) AS '90-94',
    SUM(CASE WHEN AgeRange = '95-99' THEN POP_TOTAL ELSE 0 END) AS '95-99',
    SUM(CASE WHEN AgeRange = '100-104' THEN POP_TOTAL ELSE 0 END) AS '100-104',
    SUM(CASE WHEN AgeRange = '105-109' THEN POP_TOTAL ELSE 0 END) AS '105-109',
    SUM(CASE WHEN AgeRange = 'gr109' THEN POP_TOTAL ELSE 0 END) AS 'gr109'
FROM (
    SELECT 
        DAYS_20200101,
        CASE
            WHEN AGE_2023 BETWEEN 0 AND 4 THEN '0-4'
            WHEN AGE_2023 BETWEEN 5 AND 9 THEN '5-9'
            WHEN AGE_2023 BETWEEN 10 AND 14 THEN '10-14'
            WHEN AGE_2023 BETWEEN 15 AND 19 THEN '15-19'
            WHEN AGE_2023 BETWEEN 20 AND 24 THEN '20-24'
            WHEN AGE_2023 BETWEEN 25 AND 29 THEN '25-29'
            WHEN AGE_2023 BETWEEN 30 AND 34 THEN '30-34'
            WHEN AGE_2023 BETWEEN 35 AND 39 THEN '35-39'
            WHEN AGE_2023 BETWEEN 40 AND 44 THEN '40-44'
            WHEN AGE_2023 BETWEEN 45 AND 49 THEN '45-49'
            WHEN AGE_2023 BETWEEN 50 AND 54 THEN '50-54'
            WHEN AGE_2023 BETWEEN 55 AND 59 THEN '55-59'
            WHEN AGE_2023 BETWEEN 60 AND 64 THEN '60-64'
            WHEN AGE_2023 BETWEEN 65 AND 69 THEN '65-69'
            WHEN AGE_2023 BETWEEN 70 AND 74 THEN '70-74'
            WHEN AGE_2023 BETWEEN 75 AND 79 THEN '75-79'
            WHEN AGE_2023 BETWEEN 80 AND 84 THEN '80-84'
            WHEN AGE_2023 BETWEEN 85 AND 89 THEN '85-89'
            WHEN AGE_2023 BETWEEN 90 AND 94 THEN '90-94'
            WHEN AGE_2023 BETWEEN 95 AND 99 THEN '95-99'
            WHEN AGE_2023 BETWEEN 100 AND 104 THEN '100-104'
            WHEN AGE_2023 BETWEEN 105 AND 109 THEN '105-109'
            ELSE 'gr109'            
        END AS AgeRange,
        POP_TOTAL
    FROM (
        SELECT DISTINCT 
            DAYS_20200101, 
            AGE_2023, 
            DAYS_AGE_RANGE.POP_TOTAL
        FROM 
            DAYS_AGE_RANGE
    ) AS POP_TOTAL
) AS AgeRanges
GROUP BY DAYS_20200101;

-- create view PVT_NUM_D

DROP VIEW IF EXISTS PVT_NUM_D;
CREATE VIEW PVT_NUM_D AS
SELECT 
    DAYS_20200101,
    SUM(CASE WHEN AgeRange = '0-4' THEN NUM_D ELSE 0 END) AS '0-4',
    SUM(CASE WHEN AgeRange = '5-9' THEN NUM_D ELSE 0 END) AS '5-9',
    SUM(CASE WHEN AgeRange = '10-14' THEN NUM_D ELSE 0 END) AS '10-14',
    SUM(CASE WHEN AgeRange = '15-19' THEN NUM_D ELSE 0 END) AS '15-19',
    SUM(CASE WHEN AgeRange = '20-24' THEN NUM_D ELSE 0 END) AS '20-24',
    SUM(CASE WHEN AgeRange = '25-29' THEN NUM_D ELSE 0 END) AS '25-29',
    SUM(CASE WHEN AgeRange = '30-34' THEN NUM_D ELSE 0 END) AS '30-34',
    SUM(CASE WHEN AgeRange = '35-39' THEN NUM_D ELSE 0 END) AS '35-39',
    SUM(CASE WHEN AgeRange = '40-44' THEN NUM_D ELSE 0 END) AS '40-44',
    SUM(CASE WHEN AgeRange = '45-49' THEN NUM_D ELSE 0 END) AS '45-49',
    SUM(CASE WHEN AgeRange = '50-54' THEN NUM_D ELSE 0 END) AS '50-54',
    SUM(CASE WHEN AgeRange = '55-59' THEN NUM_D ELSE 0 END) AS '55-59',
    SUM(CASE WHEN AgeRange = '60-64' THEN NUM_D ELSE 0 END) AS '60-64',
    SUM(CASE WHEN AgeRange = '65-69' THEN NUM_D ELSE 0 END) AS '65-69',
    SUM(CASE WHEN AgeRange = '70-74' THEN NUM_D ELSE 0 END) AS '70-74',
    SUM(CASE WHEN AgeRange = '75-79' THEN NUM_D ELSE 0 END) AS '75-79',
    SUM(CASE WHEN AgeRange = '80-84' THEN NUM_D ELSE 0 END) AS '80-84',
    SUM(CASE WHEN AgeRange = '85-89' THEN NUM_D ELSE 0 END) AS '85-89',
    SUM(CASE WHEN AgeRange = '90-94' THEN NUM_D ELSE 0 END) AS '90-94',
    SUM(CASE WHEN AgeRange = '95-99' THEN NUM_D ELSE 0 END) AS '95-99',
    SUM(CASE WHEN AgeRange = '100-104' THEN NUM_D ELSE 0 END) AS '100-104',
    SUM(CASE WHEN AgeRange = '105-109' THEN NUM_D ELSE 0 END) AS '105-109',
    SUM(CASE WHEN AgeRange = 'gr109' THEN NUM_D ELSE 0 END) AS 'gr109'
FROM (
    SELECT 
        DAYS_20200101,
        CASE
            WHEN AGE_2023 BETWEEN 0 AND 4 THEN '0-4'
            WHEN AGE_2023 BETWEEN 5 AND 9 THEN '5-9'
            WHEN AGE_2023 BETWEEN 10 AND 14 THEN '10-14'
            WHEN AGE_2023 BETWEEN 15 AND 19 THEN '15-19'
            WHEN AGE_2023 BETWEEN 20 AND 24 THEN '20-24'
            WHEN AGE_2023 BETWEEN 25 AND 29 THEN '25-29'
            WHEN AGE_2023 BETWEEN 30 AND 34 THEN '30-34'
            WHEN AGE_2023 BETWEEN 35 AND 39 THEN '35-39'
            WHEN AGE_2023 BETWEEN 40 AND 44 THEN '40-44'
            WHEN AGE_2023 BETWEEN 45 AND 49 THEN '45-49'
            WHEN AGE_2023 BETWEEN 50 AND 54 THEN '50-54'
            WHEN AGE_2023 BETWEEN 55 AND 59 THEN '55-59'
            WHEN AGE_2023 BETWEEN 60 AND 64 THEN '60-64'
            WHEN AGE_2023 BETWEEN 65 AND 69 THEN '65-69'
            WHEN AGE_2023 BETWEEN 70 AND 74 THEN '70-74'
            WHEN AGE_2023 BETWEEN 75 AND 79 THEN '75-79'
            WHEN AGE_2023 BETWEEN 80 AND 84 THEN '80-84'
            WHEN AGE_2023 BETWEEN 85 AND 89 THEN '85-89'
            WHEN AGE_2023 BETWEEN 90 AND 94 THEN '90-94'
            WHEN AGE_2023 BETWEEN 95 AND 99 THEN '95-99'
            WHEN AGE_2023 BETWEEN 100 AND 104 THEN '100-104'
            WHEN AGE_2023 BETWEEN 105 AND 109 THEN '105-109'
            ELSE 'gr109'            
        END AS AgeRange,
        NUM_D
    FROM (
        SELECT DISTINCT 
            DAYS_20200101, 
            AGE_2023, 
            DAYS_AGE_RANGE.NUM_D
        FROM 
            DAYS_AGE_RANGE
    ) AS NUM_D
) AS AgeRanges
GROUP BY DAYS_20200101;

-- create view PVT_NUM_VX_D

DROP VIEW IF EXISTS PVT_NUM_VX_D;
CREATE VIEW PVT_NUM_VX_D AS
SELECT 
    DAYS_20200101,
    SUM(CASE WHEN AgeRange = '0-4' THEN NUM_VX_D ELSE 0 END) AS '0-4',
    SUM(CASE WHEN AgeRange = '5-9' THEN NUM_VX_D ELSE 0 END) AS '5-9',
    SUM(CASE WHEN AgeRange = '10-14' THEN NUM_VX_D ELSE 0 END) AS '10-14',
    SUM(CASE WHEN AgeRange = '15-19' THEN NUM_VX_D ELSE 0 END) AS '15-19',
    SUM(CASE WHEN AgeRange = '20-24' THEN NUM_VX_D ELSE 0 END) AS '20-24',
    SUM(CASE WHEN AgeRange = '25-29' THEN NUM_VX_D ELSE 0 END) AS '25-29',
    SUM(CASE WHEN AgeRange = '30-34' THEN NUM_VX_D ELSE 0 END) AS '30-34',
    SUM(CASE WHEN AgeRange = '35-39' THEN NUM_VX_D ELSE 0 END) AS '35-39',
    SUM(CASE WHEN AgeRange = '40-44' THEN NUM_VX_D ELSE 0 END) AS '40-44',
    SUM(CASE WHEN AgeRange = '45-49' THEN NUM_VX_D ELSE 0 END) AS '45-49',
    SUM(CASE WHEN AgeRange = '50-54' THEN NUM_VX_D ELSE 0 END) AS '50-54',
    SUM(CASE WHEN AgeRange = '55-59' THEN NUM_VX_D ELSE 0 END) AS '55-59',
    SUM(CASE WHEN AgeRange = '60-64' THEN NUM_VX_D ELSE 0 END) AS '60-64',
    SUM(CASE WHEN AgeRange = '65-69' THEN NUM_VX_D ELSE 0 END) AS '65-69',
    SUM(CASE WHEN AgeRange = '70-74' THEN NUM_VX_D ELSE 0 END) AS '70-74',
    SUM(CASE WHEN AgeRange = '75-79' THEN NUM_VX_D ELSE 0 END) AS '75-79',
    SUM(CASE WHEN AgeRange = '80-84' THEN NUM_VX_D ELSE 0 END) AS '80-84',
    SUM(CASE WHEN AgeRange = '85-89' THEN NUM_VX_D ELSE 0 END) AS '85-89',
    SUM(CASE WHEN AgeRange = '90-94' THEN NUM_VX_D ELSE 0 END) AS '90-94',
    SUM(CASE WHEN AgeRange = '95-99' THEN NUM_VX_D ELSE 0 END) AS '95-99',
    SUM(CASE WHEN AgeRange = '100-104' THEN NUM_VX_D ELSE 0 END) AS '100-104',
    SUM(CASE WHEN AgeRange = '105-109' THEN NUM_VX_D ELSE 0 END) AS '105-109',
    SUM(CASE WHEN AgeRange = 'gr109' THEN NUM_VX_D ELSE 0 END) AS 'gr109'
FROM (
    SELECT 
        DAYS_20200101,
        CASE
            WHEN AGE_2023 BETWEEN 0 AND 4 THEN '0-4'
            WHEN AGE_2023 BETWEEN 5 AND 9 THEN '5-9'
            WHEN AGE_2023 BETWEEN 10 AND 14 THEN '10-14'
            WHEN AGE_2023 BETWEEN 15 AND 19 THEN '15-19'
            WHEN AGE_2023 BETWEEN 20 AND 24 THEN '20-24'
            WHEN AGE_2023 BETWEEN 25 AND 29 THEN '25-29'
            WHEN AGE_2023 BETWEEN 30 AND 34 THEN '30-34'
            WHEN AGE_2023 BETWEEN 35 AND 39 THEN '35-39'
            WHEN AGE_2023 BETWEEN 40 AND 44 THEN '40-44'
            WHEN AGE_2023 BETWEEN 45 AND 49 THEN '45-49'
            WHEN AGE_2023 BETWEEN 50 AND 54 THEN '50-54'
            WHEN AGE_2023 BETWEEN 55 AND 59 THEN '55-59'
            WHEN AGE_2023 BETWEEN 60 AND 64 THEN '60-64'
            WHEN AGE_2023 BETWEEN 65 AND 69 THEN '65-69'
            WHEN AGE_2023 BETWEEN 70 AND 74 THEN '70-74'
            WHEN AGE_2023 BETWEEN 75 AND 79 THEN '75-79'
            WHEN AGE_2023 BETWEEN 80 AND 84 THEN '80-84'
            WHEN AGE_2023 BETWEEN 85 AND 89 THEN '85-89'
            WHEN AGE_2023 BETWEEN 90 AND 94 THEN '90-94'
            WHEN AGE_2023 BETWEEN 95 AND 99 THEN '95-99'
            WHEN AGE_2023 BETWEEN 100 AND 104 THEN '100-104'
            WHEN AGE_2023 BETWEEN 105 AND 109 THEN '105-109'
            ELSE 'gr109'            
        END AS AgeRange,
        NUM_VX_D
    FROM (
        SELECT DISTINCT 
            DAYS_20200101, 
            AGE_2023, 
            DAYS_AGE_RANGE.NUM_VX_D
        FROM 
            DAYS_AGE_RANGE
    ) AS NUM_VX_D
) AS AgeRanges
GROUP BY DAYS_20200101;

-- create view PVT_NUM_UVX_D
	
DROP VIEW IF EXISTS PVT_NUM_UVX_D;
CREATE VIEW PVT_NUM_UVX_D AS
SELECT 
    DAYS_20200101,
    SUM(CASE WHEN AgeRange = '0-4' THEN NUM_UVX_D ELSE 0 END) AS '0-4',
    SUM(CASE WHEN AgeRange = '5-9' THEN NUM_UVX_D ELSE 0 END) AS '5-9',
    SUM(CASE WHEN AgeRange = '10-14' THEN NUM_UVX_D ELSE 0 END) AS '10-14',
    SUM(CASE WHEN AgeRange = '15-19' THEN NUM_UVX_D ELSE 0 END) AS '15-19',
    SUM(CASE WHEN AgeRange = '20-24' THEN NUM_UVX_D ELSE 0 END) AS '20-24',
    SUM(CASE WHEN AgeRange = '25-29' THEN NUM_UVX_D ELSE 0 END) AS '25-29',
    SUM(CASE WHEN AgeRange = '30-34' THEN NUM_UVX_D ELSE 0 END) AS '30-34',
    SUM(CASE WHEN AgeRange = '35-39' THEN NUM_UVX_D ELSE 0 END) AS '35-39',
    SUM(CASE WHEN AgeRange = '40-44' THEN NUM_UVX_D ELSE 0 END) AS '40-44',
    SUM(CASE WHEN AgeRange = '45-49' THEN NUM_UVX_D ELSE 0 END) AS '45-49',
    SUM(CASE WHEN AgeRange = '50-54' THEN NUM_UVX_D ELSE 0 END) AS '50-54',
    SUM(CASE WHEN AgeRange = '55-59' THEN NUM_UVX_D ELSE 0 END) AS '55-59',
    SUM(CASE WHEN AgeRange = '60-64' THEN NUM_UVX_D ELSE 0 END) AS '60-64',
    SUM(CASE WHEN AgeRange = '65-69' THEN NUM_UVX_D ELSE 0 END) AS '65-69',
    SUM(CASE WHEN AgeRange = '70-74' THEN NUM_UVX_D ELSE 0 END) AS '70-74',
    SUM(CASE WHEN AgeRange = '75-79' THEN NUM_UVX_D ELSE 0 END) AS '75-79',
    SUM(CASE WHEN AgeRange = '80-84' THEN NUM_UVX_D ELSE 0 END) AS '80-84',
    SUM(CASE WHEN AgeRange = '85-89' THEN NUM_UVX_D ELSE 0 END) AS '85-89',
    SUM(CASE WHEN AgeRange = '90-94' THEN NUM_UVX_D ELSE 0 END) AS '90-94',
    SUM(CASE WHEN AgeRange = '95-99' THEN NUM_UVX_D ELSE 0 END) AS '95-99',
    SUM(CASE WHEN AgeRange = '100-104' THEN NUM_UVX_D ELSE 0 END) AS '100-104',
    SUM(CASE WHEN AgeRange = '105-109' THEN NUM_UVX_D ELSE 0 END) AS '105-109',
    SUM(CASE WHEN AgeRange = 'gr109' THEN NUM_UVX_D ELSE 0 END) AS 'gr109'
FROM (
    SELECT 
        DAYS_20200101,
        CASE
            WHEN AGE_2023 BETWEEN 0 AND 4 THEN '0-4'
            WHEN AGE_2023 BETWEEN 5 AND 9 THEN '5-9'
            WHEN AGE_2023 BETWEEN 10 AND 14 THEN '10-14'
            WHEN AGE_2023 BETWEEN 15 AND 19 THEN '15-19'
            WHEN AGE_2023 BETWEEN 20 AND 24 THEN '20-24'
            WHEN AGE_2023 BETWEEN 25 AND 29 THEN '25-29'
            WHEN AGE_2023 BETWEEN 30 AND 34 THEN '30-34'
            WHEN AGE_2023 BETWEEN 35 AND 39 THEN '35-39'
            WHEN AGE_2023 BETWEEN 40 AND 44 THEN '40-44'
            WHEN AGE_2023 BETWEEN 45 AND 49 THEN '45-49'
            WHEN AGE_2023 BETWEEN 50 AND 54 THEN '50-54'
            WHEN AGE_2023 BETWEEN 55 AND 59 THEN '55-59'
            WHEN AGE_2023 BETWEEN 60 AND 64 THEN '60-64'
            WHEN AGE_2023 BETWEEN 65 AND 69 THEN '65-69'
            WHEN AGE_2023 BETWEEN 70 AND 74 THEN '70-74'
            WHEN AGE_2023 BETWEEN 75 AND 79 THEN '75-79'
            WHEN AGE_2023 BETWEEN 80 AND 84 THEN '80-84'
            WHEN AGE_2023 BETWEEN 85 AND 89 THEN '85-89'
            WHEN AGE_2023 BETWEEN 90 AND 94 THEN '90-94'
            WHEN AGE_2023 BETWEEN 95 AND 99 THEN '95-99'
            WHEN AGE_2023 BETWEEN 100 AND 104 THEN '100-104'
            WHEN AGE_2023 BETWEEN 105 AND 109 THEN '105-109'
            ELSE 'gr109'            
        END AS AgeRange,
        NUM_UVX_D
    FROM (
        SELECT DISTINCT 
            DAYS_20200101, 
            AGE_2023, 
            DAYS_AGE_RANGE.NUM_UVX_D
        FROM 
            DAYS_AGE_RANGE
    ) AS NUM_UVX_D
) AS AgeRanges
GROUP BY DAYS_20200101;

-- create view PVT_CUM_NUM_D

DROP VIEW IF EXISTS PVT_CUM_NUM_D;
CREATE VIEW PVT_CUM_NUM_D AS
SELECT 
    DAYS_20200101,
    SUM(CASE WHEN AgeRange = '0-4' THEN CUM_NUM_D ELSE 0 END) AS '0-4',
    SUM(CASE WHEN AgeRange = '5-9' THEN CUM_NUM_D ELSE 0 END) AS '5-9',
    SUM(CASE WHEN AgeRange = '10-14' THEN CUM_NUM_D ELSE 0 END) AS '10-14',
    SUM(CASE WHEN AgeRange = '15-19' THEN CUM_NUM_D ELSE 0 END) AS '15-19',
    SUM(CASE WHEN AgeRange = '20-24' THEN CUM_NUM_D ELSE 0 END) AS '20-24',
    SUM(CASE WHEN AgeRange = '25-29' THEN CUM_NUM_D ELSE 0 END) AS '25-29',
    SUM(CASE WHEN AgeRange = '30-34' THEN CUM_NUM_D ELSE 0 END) AS '30-34',
    SUM(CASE WHEN AgeRange = '35-39' THEN CUM_NUM_D ELSE 0 END) AS '35-39',
    SUM(CASE WHEN AgeRange = '40-44' THEN CUM_NUM_D ELSE 0 END) AS '40-44',
    SUM(CASE WHEN AgeRange = '45-49' THEN CUM_NUM_D ELSE 0 END) AS '45-49',
    SUM(CASE WHEN AgeRange = '50-54' THEN CUM_NUM_D ELSE 0 END) AS '50-54',
    SUM(CASE WHEN AgeRange = '55-59' THEN CUM_NUM_D ELSE 0 END) AS '55-59',
    SUM(CASE WHEN AgeRange = '60-64' THEN CUM_NUM_D ELSE 0 END) AS '60-64',
    SUM(CASE WHEN AgeRange = '65-69' THEN CUM_NUM_D ELSE 0 END) AS '65-69',
    SUM(CASE WHEN AgeRange = '70-74' THEN CUM_NUM_D ELSE 0 END) AS '70-74',
    SUM(CASE WHEN AgeRange = '75-79' THEN CUM_NUM_D ELSE 0 END) AS '75-79',
    SUM(CASE WHEN AgeRange = '80-84' THEN CUM_NUM_D ELSE 0 END) AS '80-84',
    SUM(CASE WHEN AgeRange = '85-89' THEN CUM_NUM_D ELSE 0 END) AS '85-89',
    SUM(CASE WHEN AgeRange = '90-94' THEN CUM_NUM_D ELSE 0 END) AS '90-94',
    SUM(CASE WHEN AgeRange = '95-99' THEN CUM_NUM_D ELSE 0 END) AS '95-99',
    SUM(CASE WHEN AgeRange = '100-104' THEN CUM_NUM_D ELSE 0 END) AS '100-104',
    SUM(CASE WHEN AgeRange = '105-109' THEN CUM_NUM_D ELSE 0 END) AS '105-109',
    SUM(CASE WHEN AgeRange = 'gr109' THEN CUM_NUM_D ELSE 0 END) AS 'gr109'
FROM (
    SELECT 
        DAYS_20200101,
        CASE
            WHEN AGE_2023 BETWEEN 0 AND 4 THEN '0-4'
            WHEN AGE_2023 BETWEEN 5 AND 9 THEN '5-9'
            WHEN AGE_2023 BETWEEN 10 AND 14 THEN '10-14'
            WHEN AGE_2023 BETWEEN 15 AND 19 THEN '15-19'
            WHEN AGE_2023 BETWEEN 20 AND 24 THEN '20-24'
            WHEN AGE_2023 BETWEEN 25 AND 29 THEN '25-29'
            WHEN AGE_2023 BETWEEN 30 AND 34 THEN '30-34'
            WHEN AGE_2023 BETWEEN 35 AND 39 THEN '35-39'
            WHEN AGE_2023 BETWEEN 40 AND 44 THEN '40-44'
            WHEN AGE_2023 BETWEEN 45 AND 49 THEN '45-49'
            WHEN AGE_2023 BETWEEN 50 AND 54 THEN '50-54'
            WHEN AGE_2023 BETWEEN 55 AND 59 THEN '55-59'
            WHEN AGE_2023 BETWEEN 60 AND 64 THEN '60-64'
            WHEN AGE_2023 BETWEEN 65 AND 69 THEN '65-69'
            WHEN AGE_2023 BETWEEN 70 AND 74 THEN '70-74'
            WHEN AGE_2023 BETWEEN 75 AND 79 THEN '75-79'
            WHEN AGE_2023 BETWEEN 80 AND 84 THEN '80-84'
            WHEN AGE_2023 BETWEEN 85 AND 89 THEN '85-89'
            WHEN AGE_2023 BETWEEN 90 AND 94 THEN '90-94'
            WHEN AGE_2023 BETWEEN 95 AND 99 THEN '95-99'
            WHEN AGE_2023 BETWEEN 100 AND 104 THEN '100-104'
            WHEN AGE_2023 BETWEEN 105 AND 109 THEN '105-109'
            ELSE 'gr109'            
        END AS AgeRange,
        CUM_NUM_D
    FROM (
        SELECT DISTINCT 
            DAYS_20200101, 
            AGE_2023, 
            DAYS_AGE_RANGE.CUM_NUM_D
        FROM 
            DAYS_AGE_RANGE
    ) AS CUM_NUM_D
) AS AgeRanges
GROUP BY DAYS_20200101;

-- create view PVT_CUM_NUM_VX_D

DROP VIEW IF EXISTS PVT_CUM_NUM_VX_D;
CREATE VIEW PVT_CUM_NUM_VX_D AS
SELECT 
    DAYS_20200101,
    SUM(CASE WHEN AgeRange = '0-4' THEN CUM_NUM_VX_D ELSE 0 END) AS '0-4',
    SUM(CASE WHEN AgeRange = '5-9' THEN CUM_NUM_VX_D ELSE 0 END) AS '5-9',
    SUM(CASE WHEN AgeRange = '10-14' THEN CUM_NUM_VX_D ELSE 0 END) AS '10-14',
    SUM(CASE WHEN AgeRange = '15-19' THEN CUM_NUM_VX_D ELSE 0 END) AS '15-19',
    SUM(CASE WHEN AgeRange = '20-24' THEN CUM_NUM_VX_D ELSE 0 END) AS '20-24',
    SUM(CASE WHEN AgeRange = '25-29' THEN CUM_NUM_VX_D ELSE 0 END) AS '25-29',
    SUM(CASE WHEN AgeRange = '30-34' THEN CUM_NUM_VX_D ELSE 0 END) AS '30-34',
    SUM(CASE WHEN AgeRange = '35-39' THEN CUM_NUM_VX_D ELSE 0 END) AS '35-39',
    SUM(CASE WHEN AgeRange = '40-44' THEN CUM_NUM_VX_D ELSE 0 END) AS '40-44',
    SUM(CASE WHEN AgeRange = '45-49' THEN CUM_NUM_VX_D ELSE 0 END) AS '45-49',
    SUM(CASE WHEN AgeRange = '50-54' THEN CUM_NUM_VX_D ELSE 0 END) AS '50-54',
    SUM(CASE WHEN AgeRange = '55-59' THEN CUM_NUM_VX_D ELSE 0 END) AS '55-59',
    SUM(CASE WHEN AgeRange = '60-64' THEN CUM_NUM_VX_D ELSE 0 END) AS '60-64',
    SUM(CASE WHEN AgeRange = '65-69' THEN CUM_NUM_VX_D ELSE 0 END) AS '65-69',
    SUM(CASE WHEN AgeRange = '70-74' THEN CUM_NUM_VX_D ELSE 0 END) AS '70-74',
    SUM(CASE WHEN AgeRange = '75-79' THEN CUM_NUM_VX_D ELSE 0 END) AS '75-79',
    SUM(CASE WHEN AgeRange = '80-84' THEN CUM_NUM_VX_D ELSE 0 END) AS '80-84',
    SUM(CASE WHEN AgeRange = '85-89' THEN CUM_NUM_VX_D ELSE 0 END) AS '85-89',
    SUM(CASE WHEN AgeRange = '90-94' THEN CUM_NUM_VX_D ELSE 0 END) AS '90-94',
    SUM(CASE WHEN AgeRange = '95-99' THEN CUM_NUM_VX_D ELSE 0 END) AS '95-99',
    SUM(CASE WHEN AgeRange = '100-104' THEN CUM_NUM_VX_D ELSE 0 END) AS '100-104',
    SUM(CASE WHEN AgeRange = '105-109' THEN CUM_NUM_VX_D ELSE 0 END) AS '105-109',
    SUM(CASE WHEN AgeRange = 'gr109' THEN CUM_NUM_VX_D ELSE 0 END) AS 'gr109'
FROM (
    SELECT 
        DAYS_20200101,
        CASE
            WHEN AGE_2023 BETWEEN 0 AND 4 THEN '0-4'
            WHEN AGE_2023 BETWEEN 5 AND 9 THEN '5-9'
            WHEN AGE_2023 BETWEEN 10 AND 14 THEN '10-14'
            WHEN AGE_2023 BETWEEN 15 AND 19 THEN '15-19'
            WHEN AGE_2023 BETWEEN 20 AND 24 THEN '20-24'
            WHEN AGE_2023 BETWEEN 25 AND 29 THEN '25-29'
            WHEN AGE_2023 BETWEEN 30 AND 34 THEN '30-34'
            WHEN AGE_2023 BETWEEN 35 AND 39 THEN '35-39'
            WHEN AGE_2023 BETWEEN 40 AND 44 THEN '40-44'
            WHEN AGE_2023 BETWEEN 45 AND 49 THEN '45-49'
            WHEN AGE_2023 BETWEEN 50 AND 54 THEN '50-54'
            WHEN AGE_2023 BETWEEN 55 AND 59 THEN '55-59'
            WHEN AGE_2023 BETWEEN 60 AND 64 THEN '60-64'
            WHEN AGE_2023 BETWEEN 65 AND 69 THEN '65-69'
            WHEN AGE_2023 BETWEEN 70 AND 74 THEN '70-74'
            WHEN AGE_2023 BETWEEN 75 AND 79 THEN '75-79'
            WHEN AGE_2023 BETWEEN 80 AND 84 THEN '80-84'
            WHEN AGE_2023 BETWEEN 85 AND 89 THEN '85-89'
            WHEN AGE_2023 BETWEEN 90 AND 94 THEN '90-94'
            WHEN AGE_2023 BETWEEN 95 AND 99 THEN '95-99'
            WHEN AGE_2023 BETWEEN 100 AND 104 THEN '100-104'
            WHEN AGE_2023 BETWEEN 105 AND 109 THEN '105-109'
            ELSE 'gr109'            
        END AS AgeRange,
        CUM_NUM_VX_D
    FROM (
        SELECT DISTINCT 
            DAYS_20200101, 
            AGE_2023, 
            DAYS_AGE_RANGE.CUM_NUM_VX_D
        FROM 
            DAYS_AGE_RANGE
    ) AS CUM_NUM_VX_D
) AS AgeRanges
GROUP BY DAYS_20200101;

-- create view PVT_CUM_NUM_UVX_D

DROP VIEW IF EXISTS PVT_CUM_NUM_UVX_D;
CREATE VIEW PVT_CUM_NUM_UVX_D AS
SELECT 
    DAYS_20200101,
    SUM(CASE WHEN AgeRange = '0-4' THEN CUM_NUM_UVX_D ELSE 0 END) AS '0-4',
    SUM(CASE WHEN AgeRange = '5-9' THEN CUM_NUM_UVX_D ELSE 0 END) AS '5-9',
    SUM(CASE WHEN AgeRange = '10-14' THEN CUM_NUM_UVX_D ELSE 0 END) AS '10-14',
    SUM(CASE WHEN AgeRange = '15-19' THEN CUM_NUM_UVX_D ELSE 0 END) AS '15-19',
    SUM(CASE WHEN AgeRange = '20-24' THEN CUM_NUM_UVX_D ELSE 0 END) AS '20-24',
    SUM(CASE WHEN AgeRange = '25-29' THEN CUM_NUM_UVX_D ELSE 0 END) AS '25-29',
    SUM(CASE WHEN AgeRange = '30-34' THEN CUM_NUM_UVX_D ELSE 0 END) AS '30-34',
    SUM(CASE WHEN AgeRange = '35-39' THEN CUM_NUM_UVX_D ELSE 0 END) AS '35-39',
    SUM(CASE WHEN AgeRange = '40-44' THEN CUM_NUM_UVX_D ELSE 0 END) AS '40-44',
    SUM(CASE WHEN AgeRange = '45-49' THEN CUM_NUM_UVX_D ELSE 0 END) AS '45-49',
    SUM(CASE WHEN AgeRange = '50-54' THEN CUM_NUM_UVX_D ELSE 0 END) AS '50-54',
    SUM(CASE WHEN AgeRange = '55-59' THEN CUM_NUM_UVX_D ELSE 0 END) AS '55-59',
    SUM(CASE WHEN AgeRange = '60-64' THEN CUM_NUM_UVX_D ELSE 0 END) AS '60-64',
    SUM(CASE WHEN AgeRange = '65-69' THEN CUM_NUM_UVX_D ELSE 0 END) AS '65-69',
    SUM(CASE WHEN AgeRange = '70-74' THEN CUM_NUM_UVX_D ELSE 0 END) AS '70-74',
    SUM(CASE WHEN AgeRange = '75-79' THEN CUM_NUM_UVX_D ELSE 0 END) AS '75-79',
    SUM(CASE WHEN AgeRange = '80-84' THEN CUM_NUM_UVX_D ELSE 0 END) AS '80-84',
    SUM(CASE WHEN AgeRange = '85-89' THEN CUM_NUM_UVX_D ELSE 0 END) AS '85-89',
    SUM(CASE WHEN AgeRange = '90-94' THEN CUM_NUM_UVX_D ELSE 0 END) AS '90-94',
    SUM(CASE WHEN AgeRange = '95-99' THEN CUM_NUM_UVX_D ELSE 0 END) AS '95-99',
    SUM(CASE WHEN AgeRange = '100-104' THEN CUM_NUM_UVX_D ELSE 0 END) AS '100-104',
    SUM(CASE WHEN AgeRange = '105-109' THEN CUM_NUM_UVX_D ELSE 0 END) AS '105-109',
    SUM(CASE WHEN AgeRange = 'gr109' THEN CUM_NUM_UVX_D ELSE 0 END) AS 'gr109'
FROM (
    SELECT 
        DAYS_20200101,
        CASE
            WHEN AGE_2023 BETWEEN 0 AND 4 THEN '0-4'
            WHEN AGE_2023 BETWEEN 5 AND 9 THEN '5-9'
            WHEN AGE_2023 BETWEEN 10 AND 14 THEN '10-14'
            WHEN AGE_2023 BETWEEN 15 AND 19 THEN '15-19'
            WHEN AGE_2023 BETWEEN 20 AND 24 THEN '20-24'
            WHEN AGE_2023 BETWEEN 25 AND 29 THEN '25-29'
            WHEN AGE_2023 BETWEEN 30 AND 34 THEN '30-34'
            WHEN AGE_2023 BETWEEN 35 AND 39 THEN '35-39'
            WHEN AGE_2023 BETWEEN 40 AND 44 THEN '40-44'
            WHEN AGE_2023 BETWEEN 45 AND 49 THEN '45-49'
            WHEN AGE_2023 BETWEEN 50 AND 54 THEN '50-54'
            WHEN AGE_2023 BETWEEN 55 AND 59 THEN '55-59'
            WHEN AGE_2023 BETWEEN 60 AND 64 THEN '60-64'
            WHEN AGE_2023 BETWEEN 65 AND 69 THEN '65-69'
            WHEN AGE_2023 BETWEEN 70 AND 74 THEN '70-74'
            WHEN AGE_2023 BETWEEN 75 AND 79 THEN '75-79'
            WHEN AGE_2023 BETWEEN 80 AND 84 THEN '80-84'
            WHEN AGE_2023 BETWEEN 85 AND 89 THEN '85-89'
            WHEN AGE_2023 BETWEEN 90 AND 94 THEN '90-94'
            WHEN AGE_2023 BETWEEN 95 AND 99 THEN '95-99'
            WHEN AGE_2023 BETWEEN 100 AND 104 THEN '100-104'
            WHEN AGE_2023 BETWEEN 105 AND 109 THEN '105-109'
            ELSE 'gr109'            
        END AS AgeRange,
        CUM_NUM_UVX_D
    FROM (
        SELECT DISTINCT 
            DAYS_20200101, 
            AGE_2023, 
            DAYS_AGE_RANGE.CUM_NUM_UVX_D
        FROM 
            DAYS_AGE_RANGE
    ) AS CUM_NUM_UVX_D
) AS AgeRanges
GROUP BY DAYS_20200101;

-- create view PVT_CUM_NUM_VX

DROP VIEW IF EXISTS PVT_CUM_NUM_VX;
CREATE VIEW PVT_CUM_NUM_VX AS
SELECT 
    DAYS_20200101,
    SUM(CASE WHEN AgeRange = '0-4' THEN CUM_NUM_VX ELSE 0 END) AS '0-4',
    SUM(CASE WHEN AgeRange = '5-9' THEN CUM_NUM_VX ELSE 0 END) AS '5-9',
    SUM(CASE WHEN AgeRange = '10-14' THEN CUM_NUM_VX ELSE 0 END) AS '10-14',
    SUM(CASE WHEN AgeRange = '15-19' THEN CUM_NUM_VX ELSE 0 END) AS '15-19',
    SUM(CASE WHEN AgeRange = '20-24' THEN CUM_NUM_VX ELSE 0 END) AS '20-24',
    SUM(CASE WHEN AgeRange = '25-29' THEN CUM_NUM_VX ELSE 0 END) AS '25-29',
    SUM(CASE WHEN AgeRange = '30-34' THEN CUM_NUM_VX ELSE 0 END) AS '30-34',
    SUM(CASE WHEN AgeRange = '35-39' THEN CUM_NUM_VX ELSE 0 END) AS '35-39',
    SUM(CASE WHEN AgeRange = '40-44' THEN CUM_NUM_VX ELSE 0 END) AS '40-44',
    SUM(CASE WHEN AgeRange = '45-49' THEN CUM_NUM_VX ELSE 0 END) AS '45-49',
    SUM(CASE WHEN AgeRange = '50-54' THEN CUM_NUM_VX ELSE 0 END) AS '50-54',
    SUM(CASE WHEN AgeRange = '55-59' THEN CUM_NUM_VX ELSE 0 END) AS '55-59',
    SUM(CASE WHEN AgeRange = '60-64' THEN CUM_NUM_VX ELSE 0 END) AS '60-64',
    SUM(CASE WHEN AgeRange = '65-69' THEN CUM_NUM_VX ELSE 0 END) AS '65-69',
    SUM(CASE WHEN AgeRange = '70-74' THEN CUM_NUM_VX ELSE 0 END) AS '70-74',
    SUM(CASE WHEN AgeRange = '75-79' THEN CUM_NUM_VX ELSE 0 END) AS '75-79',
    SUM(CASE WHEN AgeRange = '80-84' THEN CUM_NUM_VX ELSE 0 END) AS '80-84',
    SUM(CASE WHEN AgeRange = '85-89' THEN CUM_NUM_VX ELSE 0 END) AS '85-89',
    SUM(CASE WHEN AgeRange = '90-94' THEN CUM_NUM_VX ELSE 0 END) AS '90-94',
    SUM(CASE WHEN AgeRange = '95-99' THEN CUM_NUM_VX ELSE 0 END) AS '95-99',
    SUM(CASE WHEN AgeRange = '100-104' THEN CUM_NUM_VX ELSE 0 END) AS '100-104',
    SUM(CASE WHEN AgeRange = '105-109' THEN CUM_NUM_VX ELSE 0 END) AS '105-109',
    SUM(CASE WHEN AgeRange = 'gr109' THEN CUM_NUM_VX ELSE 0 END) AS 'gr109'
FROM (
    SELECT 
        DAYS_20200101,
        CASE
            WHEN AGE_2023 BETWEEN 0 AND 4 THEN '0-4'
            WHEN AGE_2023 BETWEEN 5 AND 9 THEN '5-9'
            WHEN AGE_2023 BETWEEN 10 AND 14 THEN '10-14'
            WHEN AGE_2023 BETWEEN 15 AND 19 THEN '15-19'
            WHEN AGE_2023 BETWEEN 20 AND 24 THEN '20-24'
            WHEN AGE_2023 BETWEEN 25 AND 29 THEN '25-29'
            WHEN AGE_2023 BETWEEN 30 AND 34 THEN '30-34'
            WHEN AGE_2023 BETWEEN 35 AND 39 THEN '35-39'
            WHEN AGE_2023 BETWEEN 40 AND 44 THEN '40-44'
            WHEN AGE_2023 BETWEEN 45 AND 49 THEN '45-49'
            WHEN AGE_2023 BETWEEN 50 AND 54 THEN '50-54'
            WHEN AGE_2023 BETWEEN 55 AND 59 THEN '55-59'
            WHEN AGE_2023 BETWEEN 60 AND 64 THEN '60-64'
            WHEN AGE_2023 BETWEEN 65 AND 69 THEN '65-69'
            WHEN AGE_2023 BETWEEN 70 AND 74 THEN '70-74'
            WHEN AGE_2023 BETWEEN 75 AND 79 THEN '75-79'
            WHEN AGE_2023 BETWEEN 80 AND 84 THEN '80-84'
            WHEN AGE_2023 BETWEEN 85 AND 89 THEN '85-89'
            WHEN AGE_2023 BETWEEN 90 AND 94 THEN '90-94'
            WHEN AGE_2023 BETWEEN 95 AND 99 THEN '95-99'
            WHEN AGE_2023 BETWEEN 100 AND 104 THEN '100-104'
            WHEN AGE_2023 BETWEEN 105 AND 109 THEN '105-109'
            ELSE 'gr109'            
        END AS AgeRange,
        CUM_NUM_VX
    FROM (
        SELECT DISTINCT 
            DAYS_20200101, 
            AGE_2023, 
            DAYS_AGE_RANGE.CUM_NUM_VX
        FROM 
            DAYS_AGE_RANGE
    ) AS CUM_NUM_VX
) AS AgeRanges
GROUP BY DAYS_20200101;

-- create view PVT_CUM_NUM_UVX

DROP VIEW IF EXISTS PVT_CUM_NUM_UVX;
CREATE VIEW PVT_CUM_NUM_UVX AS
SELECT 
    DAYS_20200101,
    SUM(CASE WHEN AgeRange = '0-4' THEN CUM_NUM_UVX ELSE 0 END) AS '0-4',
    SUM(CASE WHEN AgeRange = '5-9' THEN CUM_NUM_UVX ELSE 0 END) AS '5-9',
    SUM(CASE WHEN AgeRange = '10-14' THEN CUM_NUM_UVX ELSE 0 END) AS '10-14',
    SUM(CASE WHEN AgeRange = '15-19' THEN CUM_NUM_UVX ELSE 0 END) AS '15-19',
    SUM(CASE WHEN AgeRange = '20-24' THEN CUM_NUM_UVX ELSE 0 END) AS '20-24',
    SUM(CASE WHEN AgeRange = '25-29' THEN CUM_NUM_UVX ELSE 0 END) AS '25-29',
    SUM(CASE WHEN AgeRange = '30-34' THEN CUM_NUM_UVX ELSE 0 END) AS '30-34',
    SUM(CASE WHEN AgeRange = '35-39' THEN CUM_NUM_UVX ELSE 0 END) AS '35-39',
    SUM(CASE WHEN AgeRange = '40-44' THEN CUM_NUM_UVX ELSE 0 END) AS '40-44',
    SUM(CASE WHEN AgeRange = '45-49' THEN CUM_NUM_UVX ELSE 0 END) AS '45-49',
    SUM(CASE WHEN AgeRange = '50-54' THEN CUM_NUM_UVX ELSE 0 END) AS '50-54',
    SUM(CASE WHEN AgeRange = '55-59' THEN CUM_NUM_UVX ELSE 0 END) AS '55-59',
    SUM(CASE WHEN AgeRange = '60-64' THEN CUM_NUM_UVX ELSE 0 END) AS '60-64',
    SUM(CASE WHEN AgeRange = '65-69' THEN CUM_NUM_UVX ELSE 0 END) AS '65-69',
    SUM(CASE WHEN AgeRange = '70-74' THEN CUM_NUM_UVX ELSE 0 END) AS '70-74',
    SUM(CASE WHEN AgeRange = '75-79' THEN CUM_NUM_UVX ELSE 0 END) AS '75-79',
    SUM(CASE WHEN AgeRange = '80-84' THEN CUM_NUM_UVX ELSE 0 END) AS '80-84',
    SUM(CASE WHEN AgeRange = '85-89' THEN CUM_NUM_UVX ELSE 0 END) AS '85-89',
    SUM(CASE WHEN AgeRange = '90-94' THEN CUM_NUM_UVX ELSE 0 END) AS '90-94',
    SUM(CASE WHEN AgeRange = '95-99' THEN CUM_NUM_UVX ELSE 0 END) AS '95-99',
    SUM(CASE WHEN AgeRange = '100-104' THEN CUM_NUM_UVX ELSE 0 END) AS '100-104',
    SUM(CASE WHEN AgeRange = '105-109' THEN CUM_NUM_UVX ELSE 0 END) AS '105-109',
    SUM(CASE WHEN AgeRange = 'gr109' THEN CUM_NUM_UVX ELSE 0 END) AS 'gr109'
FROM (
    SELECT 
        DAYS_20200101,
        CASE
            WHEN AGE_2023 BETWEEN 0 AND 4 THEN '0-4'
            WHEN AGE_2023 BETWEEN 5 AND 9 THEN '5-9'
            WHEN AGE_2023 BETWEEN 10 AND 14 THEN '10-14'
            WHEN AGE_2023 BETWEEN 15 AND 19 THEN '15-19'
            WHEN AGE_2023 BETWEEN 20 AND 24 THEN '20-24'
            WHEN AGE_2023 BETWEEN 25 AND 29 THEN '25-29'
            WHEN AGE_2023 BETWEEN 30 AND 34 THEN '30-34'
            WHEN AGE_2023 BETWEEN 35 AND 39 THEN '35-39'
            WHEN AGE_2023 BETWEEN 40 AND 44 THEN '40-44'
            WHEN AGE_2023 BETWEEN 45 AND 49 THEN '45-49'
            WHEN AGE_2023 BETWEEN 50 AND 54 THEN '50-54'
            WHEN AGE_2023 BETWEEN 55 AND 59 THEN '55-59'
            WHEN AGE_2023 BETWEEN 60 AND 64 THEN '60-64'
            WHEN AGE_2023 BETWEEN 65 AND 69 THEN '65-69'
            WHEN AGE_2023 BETWEEN 70 AND 74 THEN '70-74'
            WHEN AGE_2023 BETWEEN 75 AND 79 THEN '75-79'
            WHEN AGE_2023 BETWEEN 80 AND 84 THEN '80-84'
            WHEN AGE_2023 BETWEEN 85 AND 89 THEN '85-89'
            WHEN AGE_2023 BETWEEN 90 AND 94 THEN '90-94'
            WHEN AGE_2023 BETWEEN 95 AND 99 THEN '95-99'
            WHEN AGE_2023 BETWEEN 100 AND 104 THEN '100-104'
            WHEN AGE_2023 BETWEEN 105 AND 109 THEN '105-109'
            ELSE 'gr109'            
        END AS AgeRange,
        CUM_NUM_UVX
    FROM (
        SELECT DISTINCT 
            DAYS_20200101, 
            AGE_2023, 
            DAYS_AGE_RANGE.CUM_NUM_UVX
        FROM 
            DAYS_AGE_RANGE
    ) AS CUM_NUM_UVX
) AS AgeRanges
GROUP BY DAYS_20200101;

-- create view PVT_POP_TOTAL_div_PVT_NUM_D

DROP VIEW IF EXISTS PVT_POP_TOTAL_div_PVT_NUM_D;
CREATE VIEW PVT_POP_TOTAL_div_PVT_NUM_D AS

SELECT 
    PVT_POP_TOTAL.DAYS_20200101,
    CASE WHEN PVT_NUM_D."0-4" IS NOT NULL AND PVT_NUM_D."0-4" != 0 THEN PVT_POP_TOTAL."0-4" / PVT_NUM_D."0-4" ELSE 0 END AS "0-4",
    CASE WHEN PVT_NUM_D."5-9" IS NOT NULL AND PVT_NUM_D."5-9" != 0 THEN PVT_POP_TOTAL."5-9" / PVT_NUM_D."5-9" ELSE 0 END AS "5-9",
    CASE WHEN PVT_NUM_D."10-14" IS NOT NULL AND PVT_NUM_D."10-14" != 0 THEN PVT_POP_TOTAL."10-14" / PVT_NUM_D."10-14" ELSE 0 END AS "10-14",
    CASE WHEN PVT_NUM_D."15-19" IS NOT NULL AND PVT_NUM_D."15-19" != 0 THEN PVT_POP_TOTAL."15-19" / PVT_NUM_D."15-19" ELSE 0 END AS "15-19",
    CASE WHEN PVT_NUM_D."20-24" IS NOT NULL AND PVT_NUM_D."20-24" != 0 THEN PVT_POP_TOTAL."20-24" / PVT_NUM_D."20-24" ELSE 0 END AS "20-24",
    CASE WHEN PVT_NUM_D."25-29" IS NOT NULL AND PVT_NUM_D."25-29" != 0 THEN PVT_POP_TOTAL."25-29" / PVT_NUM_D."25-29" ELSE 0 END AS "25-29",
    CASE WHEN PVT_NUM_D."30-34" IS NOT NULL AND PVT_NUM_D."30-34" != 0 THEN PVT_POP_TOTAL."30-34" / PVT_NUM_D."30-34" ELSE 0 END AS "30-34",
    CASE WHEN PVT_NUM_D."35-39" IS NOT NULL AND PVT_NUM_D."35-39" != 0 THEN PVT_POP_TOTAL."35-39" / PVT_NUM_D."35-39" ELSE 0 END AS "35-39",
    CASE WHEN PVT_NUM_D."40-44" IS NOT NULL AND PVT_NUM_D."40-44" != 0 THEN PVT_POP_TOTAL."40-44" / PVT_NUM_D."40-44" ELSE 0 END AS "40-44",
    CASE WHEN PVT_NUM_D."45-49" IS NOT NULL AND PVT_NUM_D."45-49" != 0 THEN PVT_POP_TOTAL."45-49" / PVT_NUM_D."45-49" ELSE 0 END AS "45-49",
    CASE WHEN PVT_NUM_D."50-54" IS NOT NULL AND PVT_NUM_D."50-54" != 0 THEN PVT_POP_TOTAL."50-54" / PVT_NUM_D."50-54" ELSE 0 END AS "50-54",
    CASE WHEN PVT_NUM_D."55-59" IS NOT NULL AND PVT_NUM_D."55-59" != 0 THEN PVT_POP_TOTAL."55-59" / PVT_NUM_D."55-59" ELSE 0 END AS "55-59",
    CASE WHEN PVT_NUM_D."60-64" IS NOT NULL AND PVT_NUM_D."60-64" != 0 THEN PVT_POP_TOTAL."60-64" / PVT_NUM_D."60-64" ELSE 0 END AS "60-64",
    CASE WHEN PVT_NUM_D."65-69" IS NOT NULL AND PVT_NUM_D."65-69" != 0 THEN PVT_POP_TOTAL."65-69" / PVT_NUM_D."65-69" ELSE 0 END AS "65-69",
    CASE WHEN PVT_NUM_D."70-74" IS NOT NULL AND PVT_NUM_D."70-74" != 0 THEN PVT_POP_TOTAL."70-74" / PVT_NUM_D."70-74" ELSE 0 END AS "70-74",
    CASE WHEN PVT_NUM_D."75-79" IS NOT NULL AND PVT_NUM_D."75-79" != 0 THEN PVT_POP_TOTAL."75-79" / PVT_NUM_D."75-79" ELSE 0 END AS "75-79",
    CASE WHEN PVT_NUM_D."80-84" IS NOT NULL AND PVT_NUM_D."80-84" != 0 THEN PVT_POP_TOTAL."80-84" / PVT_NUM_D."80-84" ELSE 0 END AS "80-84",
    CASE WHEN PVT_NUM_D."85-89" IS NOT NULL AND PVT_NUM_D."85-89" != 0 THEN PVT_POP_TOTAL."85-89" / PVT_NUM_D."85-89" ELSE 0 END AS "85-89",
    CASE WHEN PVT_NUM_D."90-94" IS NOT NULL AND PVT_NUM_D."90-94" != 0 THEN PVT_POP_TOTAL."90-94" / PVT_NUM_D."90-94" ELSE 0 END AS "90-94",
    CASE WHEN PVT_NUM_D."95-99" IS NOT NULL AND PVT_NUM_D."95-99" != 0 THEN PVT_POP_TOTAL."95-99" / PVT_NUM_D."95-99" ELSE 0 END AS "95-99",
    CASE WHEN PVT_NUM_D."100-104" IS NOT NULL AND PVT_NUM_D."100-104" != 0 THEN PVT_POP_TOTAL."100-104" / PVT_NUM_D."100-104" ELSE 0 END AS "100-104",
    CASE WHEN PVT_NUM_D."105-109" IS NOT NULL AND PVT_NUM_D."105-109" != 0 THEN PVT_POP_TOTAL."105-109" / PVT_NUM_D."105-109" ELSE 0 END AS "105-109",
    CASE WHEN PVT_NUM_D."gr109" IS NOT NULL AND PVT_NUM_D."gr109" != 0 THEN PVT_POP_TOTAL."gr109" / PVT_NUM_D."gr109" ELSE 0 END AS "gr109"
FROM 
    PVT_POP_TOTAL
JOIN 
    PVT_NUM_D ON PVT_POP_TOTAL.DAYS_20200101 = PVT_NUM_D.DAYS_20200101;

-- create view PVT_CUM_NUM_VX_div_PVT_CUM_NUM_VX_D

DROP VIEW IF EXISTS PVT_CUM_NUM_VX_div_PVT_NUM_VX_D;
CREATE VIEW PVT_CUM_NUM_VX_div_PVT_NUM_VX_D AS

SELECT 
    PVT_CUM_NUM_VX.DAYS_20200101,
    CASE WHEN PVT_NUM_VX_D."0-4" IS NOT NULL AND PVT_NUM_VX_D."0-4" != 0 THEN PVT_CUM_NUM_VX."0-4" / PVT_NUM_VX_D."0-4" ELSE 0 END AS "0-4",
    CASE WHEN PVT_NUM_VX_D."5-9" IS NOT NULL AND PVT_NUM_VX_D."5-9" != 0 THEN PVT_CUM_NUM_VX."5-9" / PVT_NUM_VX_D."5-9" ELSE 0 END AS "5-9",
    CASE WHEN PVT_NUM_VX_D."10-14" IS NOT NULL AND PVT_NUM_VX_D."10-14" != 0 THEN PVT_CUM_NUM_VX."10-14" / PVT_NUM_VX_D."10-14" ELSE 0 END AS "10-14",
    CASE WHEN PVT_NUM_VX_D."15-19" IS NOT NULL AND PVT_NUM_VX_D."15-19" != 0 THEN PVT_CUM_NUM_VX."15-19" / PVT_NUM_VX_D."15-19" ELSE 0 END AS "15-19",
    CASE WHEN PVT_NUM_VX_D."20-24" IS NOT NULL AND PVT_NUM_VX_D."20-24" != 0 THEN PVT_CUM_NUM_VX."20-24" / PVT_NUM_VX_D."20-24" ELSE 0 END AS "20-24",
    CASE WHEN PVT_NUM_VX_D."25-29" IS NOT NULL AND PVT_NUM_VX_D."25-29" != 0 THEN PVT_CUM_NUM_VX."25-29" / PVT_NUM_VX_D."25-29" ELSE 0 END AS "25-29",
    CASE WHEN PVT_NUM_VX_D."30-34" IS NOT NULL AND PVT_NUM_VX_D."30-34" != 0 THEN PVT_CUM_NUM_VX."30-34" / PVT_NUM_VX_D."30-34" ELSE 0 END AS "30-34",
    CASE WHEN PVT_NUM_VX_D."35-39" IS NOT NULL AND PVT_NUM_VX_D."35-39" != 0 THEN PVT_CUM_NUM_VX."35-39" / PVT_NUM_VX_D."35-39" ELSE 0 END AS "35-39",
    CASE WHEN PVT_NUM_VX_D."40-44" IS NOT NULL AND PVT_NUM_VX_D."40-44" != 0 THEN PVT_CUM_NUM_VX."40-44" / PVT_NUM_VX_D."40-44" ELSE 0 END AS "40-44",
    CASE WHEN PVT_NUM_VX_D."45-49" IS NOT NULL AND PVT_NUM_VX_D."45-49" != 0 THEN PVT_CUM_NUM_VX."45-49" / PVT_NUM_VX_D."45-49" ELSE 0 END AS "45-49",
    CASE WHEN PVT_NUM_VX_D."50-54" IS NOT NULL AND PVT_NUM_VX_D."50-54" != 0 THEN PVT_CUM_NUM_VX."50-54" / PVT_NUM_VX_D."50-54" ELSE 0 END AS "50-54",
    CASE WHEN PVT_NUM_VX_D."55-59" IS NOT NULL AND PVT_NUM_VX_D."55-59" != 0 THEN PVT_CUM_NUM_VX."55-59" / PVT_NUM_VX_D."55-59" ELSE 0 END AS "55-59",
    CASE WHEN PVT_NUM_VX_D."60-64" IS NOT NULL AND PVT_NUM_VX_D."60-64" != 0 THEN PVT_CUM_NUM_VX."60-64" / PVT_NUM_VX_D."60-64" ELSE 0 END AS "60-64",
    CASE WHEN PVT_NUM_VX_D."65-69" IS NOT NULL AND PVT_NUM_VX_D."65-69" != 0 THEN PVT_CUM_NUM_VX."65-69" / PVT_NUM_VX_D."65-69" ELSE 0 END AS "65-69",
    CASE WHEN PVT_NUM_VX_D."70-74" IS NOT NULL AND PVT_NUM_VX_D."70-74" != 0 THEN PVT_CUM_NUM_VX."70-74" / PVT_NUM_VX_D."70-74" ELSE 0 END AS "70-74",
    CASE WHEN PVT_NUM_VX_D."75-79" IS NOT NULL AND PVT_NUM_VX_D."75-79" != 0 THEN PVT_CUM_NUM_VX."75-79" / PVT_NUM_VX_D."75-79" ELSE 0 END AS "75-79",
    CASE WHEN PVT_NUM_VX_D."80-84" IS NOT NULL AND PVT_NUM_VX_D."80-84" != 0 THEN PVT_CUM_NUM_VX."80-84" / PVT_NUM_VX_D."80-84" ELSE 0 END AS "80-84",
    CASE WHEN PVT_NUM_VX_D."85-89" IS NOT NULL AND PVT_NUM_VX_D."85-89" != 0 THEN PVT_CUM_NUM_VX."85-89" / PVT_NUM_VX_D."85-89" ELSE 0 END AS "85-89",
    CASE WHEN PVT_NUM_VX_D."90-94" IS NOT NULL AND PVT_NUM_VX_D."90-94" != 0 THEN PVT_CUM_NUM_VX."90-94" / PVT_NUM_VX_D."90-94" ELSE 0 END AS "90-94",
    CASE WHEN PVT_NUM_VX_D."95-99" IS NOT NULL AND PVT_NUM_VX_D."95-99" != 0 THEN PVT_CUM_NUM_VX."95-99" / PVT_NUM_VX_D."95-99" ELSE 0 END AS "95-99",
    CASE WHEN PVT_NUM_VX_D."100-104" IS NOT NULL AND PVT_NUM_VX_D."100-104" != 0 THEN PVT_CUM_NUM_VX."100-104" / PVT_NUM_VX_D."100-104" ELSE 0 END AS "100-104",
    CASE WHEN PVT_NUM_VX_D."105-109" IS NOT NULL AND PVT_NUM_VX_D."105-109" != 0 THEN PVT_CUM_NUM_VX."105-109" / PVT_NUM_VX_D."105-109" ELSE 0 END AS "105-109",
    CASE WHEN PVT_NUM_VX_D."gr109" IS NOT NULL AND PVT_NUM_VX_D."gr109" != 0 THEN PVT_CUM_NUM_VX."gr109" / PVT_NUM_VX_D."gr109" ELSE 0 END AS "gr109"
FROM 
    PVT_CUM_NUM_VX
JOIN 
    PVT_NUM_VX_D ON PVT_CUM_NUM_VX.DAYS_20200101 = PVT_NUM_VX_D.DAYS_20200101;


-- create view PVT_CUM_NUM_UVX_div_PVT_CUM_NUM_UVX_D

DROP VIEW IF EXISTS PVT_CUM_NUM_UVX_div_PVT_NUM_UVX_D;
CREATE VIEW PVT_CUM_NUM_UVX_div_PVT_NUM_UVX_D AS

SELECT 
    PVT_CUM_NUM_UVX.DAYS_20200101,
    CASE WHEN PVT_NUM_UVX_D."0-4" IS NOT NULL AND PVT_NUM_UVX_D."0-4" != 0 THEN PVT_CUM_NUM_UVX."0-4" / PVT_NUM_UVX_D."0-4" ELSE 0 END AS "0-4",
    CASE WHEN PVT_NUM_UVX_D."5-9" IS NOT NULL AND PVT_NUM_UVX_D."5-9" != 0 THEN PVT_CUM_NUM_UVX."5-9" / PVT_NUM_UVX_D."5-9" ELSE 0 END AS "5-9",
    CASE WHEN PVT_NUM_UVX_D."10-14" IS NOT NULL AND PVT_NUM_UVX_D."10-14" != 0 THEN PVT_CUM_NUM_UVX."10-14" / PVT_NUM_UVX_D."10-14" ELSE 0 END AS "10-14",
    CASE WHEN PVT_NUM_UVX_D."15-19" IS NOT NULL AND PVT_NUM_UVX_D."15-19" != 0 THEN PVT_CUM_NUM_UVX."15-19" / PVT_NUM_UVX_D."15-19" ELSE 0 END AS "15-19",
    CASE WHEN PVT_NUM_UVX_D."20-24" IS NOT NULL AND PVT_NUM_UVX_D."20-24" != 0 THEN PVT_CUM_NUM_UVX."20-24" / PVT_NUM_UVX_D."20-24" ELSE 0 END AS "20-24",
    CASE WHEN PVT_NUM_UVX_D."25-29" IS NOT NULL AND PVT_NUM_UVX_D."25-29" != 0 THEN PVT_CUM_NUM_UVX."25-29" / PVT_NUM_UVX_D."25-29" ELSE 0 END AS "25-29",
    CASE WHEN PVT_NUM_UVX_D."30-34" IS NOT NULL AND PVT_NUM_UVX_D."30-34" != 0 THEN PVT_CUM_NUM_UVX."30-34" / PVT_NUM_UVX_D."30-34" ELSE 0 END AS "30-34",
    CASE WHEN PVT_NUM_UVX_D."35-39" IS NOT NULL AND PVT_NUM_UVX_D."35-39" != 0 THEN PVT_CUM_NUM_UVX."35-39" / PVT_NUM_UVX_D."35-39" ELSE 0 END AS "35-39",
    CASE WHEN PVT_NUM_UVX_D."40-44" IS NOT NULL AND PVT_NUM_UVX_D."40-44" != 0 THEN PVT_CUM_NUM_UVX."40-44" / PVT_NUM_UVX_D."40-44" ELSE 0 END AS "40-44",
    CASE WHEN PVT_NUM_UVX_D."45-49" IS NOT NULL AND PVT_NUM_UVX_D."45-49" != 0 THEN PVT_CUM_NUM_UVX."45-49" / PVT_NUM_UVX_D."45-49" ELSE 0 END AS "45-49",
    CASE WHEN PVT_NUM_UVX_D."50-54" IS NOT NULL AND PVT_NUM_UVX_D."50-54" != 0 THEN PVT_CUM_NUM_UVX."50-54" / PVT_NUM_UVX_D."50-54" ELSE 0 END AS "50-54",
    CASE WHEN PVT_NUM_UVX_D."55-59" IS NOT NULL AND PVT_NUM_UVX_D."55-59" != 0 THEN PVT_CUM_NUM_UVX."55-59" / PVT_NUM_UVX_D."55-59" ELSE 0 END AS "55-59",
    CASE WHEN PVT_NUM_UVX_D."60-64" IS NOT NULL AND PVT_NUM_UVX_D."60-64" != 0 THEN PVT_CUM_NUM_UVX."60-64" / PVT_NUM_UVX_D."60-64" ELSE 0 END AS "60-64",
    CASE WHEN PVT_NUM_UVX_D."65-69" IS NOT NULL AND PVT_NUM_UVX_D."65-69" != 0 THEN PVT_CUM_NUM_UVX."65-69" / PVT_NUM_UVX_D."65-69" ELSE 0 END AS "65-69",
    CASE WHEN PVT_NUM_UVX_D."70-74" IS NOT NULL AND PVT_NUM_UVX_D."70-74" != 0 THEN PVT_CUM_NUM_UVX."70-74" / PVT_NUM_UVX_D."70-74" ELSE 0 END AS "70-74",
    CASE WHEN PVT_NUM_UVX_D."75-79" IS NOT NULL AND PVT_NUM_UVX_D."75-79" != 0 THEN PVT_CUM_NUM_UVX."75-79" / PVT_NUM_UVX_D."75-79" ELSE 0 END AS "75-79",
    CASE WHEN PVT_NUM_UVX_D."80-84" IS NOT NULL AND PVT_NUM_UVX_D."80-84" != 0 THEN PVT_CUM_NUM_UVX."80-84" / PVT_NUM_UVX_D."80-84" ELSE 0 END AS "80-84",
    CASE WHEN PVT_NUM_UVX_D."85-89" IS NOT NULL AND PVT_NUM_UVX_D."85-89" != 0 THEN PVT_CUM_NUM_UVX."85-89" / PVT_NUM_UVX_D."85-89" ELSE 0 END AS "85-89",
    CASE WHEN PVT_NUM_UVX_D."90-94" IS NOT NULL AND PVT_NUM_UVX_D."90-94" != 0 THEN PVT_CUM_NUM_UVX."90-94" / PVT_NUM_UVX_D."90-94" ELSE 0 END AS "90-94",
    CASE WHEN PVT_NUM_UVX_D."95-99" IS NOT NULL AND PVT_NUM_UVX_D."95-99" != 0 THEN PVT_CUM_NUM_UVX."95-99" / PVT_NUM_UVX_D."95-99" ELSE 0 END AS "95-99",
    CASE WHEN PVT_NUM_UVX_D."100-104" IS NOT NULL AND PVT_NUM_UVX_D."100-104" != 0 THEN PVT_CUM_NUM_UVX."100-104" / PVT_NUM_UVX_D."100-104" ELSE 0 END AS "100-104",
    CASE WHEN PVT_NUM_UVX_D."105-109" IS NOT NULL AND PVT_NUM_UVX_D."105-109" != 0 THEN PVT_CUM_NUM_UVX."105-109" / PVT_NUM_UVX_D."105-109" ELSE 0 END AS "105-109",
    CASE WHEN PVT_NUM_UVX_D."gr109" IS NOT NULL AND PVT_NUM_UVX_D."gr109" != 0 THEN PVT_CUM_NUM_UVX."gr109" / PVT_NUM_UVX_D."gr109" ELSE 0 END AS "gr109"
FROM 
    PVT_CUM_NUM_UVX
JOIN 
    PVT_NUM_UVX_D ON PVT_CUM_NUM_UVX.DAYS_20200101 = PVT_NUM_UVX_D.DAYS_20200101;

-- create view PVT_CUM_NUM_D_NORM	

DROP VIEW IF EXISTS PVT_CUM_NUM_D_NORM;
CREATE VIEW PVT_CUM_NUM_D_NORM AS

SELECT 
    PVT_CUM_NUM_D.DAYS_20200101,
    CASE WHEN PVT_POP_TOTAL."0-4" IS NOT NULL AND PVT_POP_TOTAL."0-4" != 0 THEN PVT_CUM_NUM_D."0-4" * (100000.0 / PVT_POP_TOTAL."0-4") ELSE 0 END AS "0-4",
    CASE WHEN PVT_POP_TOTAL."5-9" IS NOT NULL AND PVT_POP_TOTAL."5-9" != 0 THEN PVT_CUM_NUM_D."5-9" * (100000.0 / PVT_POP_TOTAL."5-9") ELSE 0 END AS "5-9",
    CASE WHEN PVT_POP_TOTAL."10-14" IS NOT NULL AND PVT_POP_TOTAL."10-14" != 0 THEN PVT_CUM_NUM_D."10-14" * (100000.0 / PVT_POP_TOTAL."10-14") ELSE 0 END AS "10-14",
    CASE WHEN PVT_POP_TOTAL."15-19" IS NOT NULL AND PVT_POP_TOTAL."15-19" != 0 THEN PVT_CUM_NUM_D."15-19" * (100000.0 / PVT_POP_TOTAL."15-19") ELSE 0 END AS "15-19",
    CASE WHEN PVT_POP_TOTAL."20-24" IS NOT NULL AND PVT_POP_TOTAL."20-24" != 0 THEN PVT_CUM_NUM_D."20-24" * (100000.0 / PVT_POP_TOTAL."20-24") ELSE 0 END AS "20-24",
    CASE WHEN PVT_POP_TOTAL."25-29" IS NOT NULL AND PVT_POP_TOTAL."25-29" != 0 THEN PVT_CUM_NUM_D."25-29" * (100000.0 / PVT_POP_TOTAL."25-29") ELSE 0 END AS "25-29",
    CASE WHEN PVT_POP_TOTAL."30-34" IS NOT NULL AND PVT_POP_TOTAL."30-34" != 0 THEN PVT_CUM_NUM_D."30-34" * (100000.0 / PVT_POP_TOTAL."30-34") ELSE 0 END AS "30-34",
    CASE WHEN PVT_POP_TOTAL."35-39" IS NOT NULL AND PVT_POP_TOTAL."35-39" != 0 THEN PVT_CUM_NUM_D."35-39" * (100000.0 / PVT_POP_TOTAL."35-39") ELSE 0 END AS "35-39",
    CASE WHEN PVT_POP_TOTAL."40-44" IS NOT NULL AND PVT_POP_TOTAL."40-44" != 0 THEN PVT_CUM_NUM_D."40-44" * (100000.0 / PVT_POP_TOTAL."40-44") ELSE 0 END AS "40-44",
    CASE WHEN PVT_POP_TOTAL."45-49" IS NOT NULL AND PVT_POP_TOTAL."45-49" != 0 THEN PVT_CUM_NUM_D."45-49" * (100000.0 / PVT_POP_TOTAL."45-49") ELSE 0 END AS "45-49",
    CASE WHEN PVT_POP_TOTAL."50-54" IS NOT NULL AND PVT_POP_TOTAL."50-54" != 0 THEN PVT_CUM_NUM_D."50-54" * (100000.0 / PVT_POP_TOTAL."50-54") ELSE 0 END AS "50-54",
    CASE WHEN PVT_POP_TOTAL."55-59" IS NOT NULL AND PVT_POP_TOTAL."55-59" != 0 THEN PVT_CUM_NUM_D."55-59" * (100000.0 / PVT_POP_TOTAL."55-59") ELSE 0 END AS "55-59",
    CASE WHEN PVT_POP_TOTAL."60-64" IS NOT NULL AND PVT_POP_TOTAL."60-64" != 0 THEN PVT_CUM_NUM_D."60-64" * (100000.0 / PVT_POP_TOTAL."60-64") ELSE 0 END AS "60-64",
    CASE WHEN PVT_POP_TOTAL."65-69" IS NOT NULL AND PVT_POP_TOTAL."65-69" != 0 THEN PVT_CUM_NUM_D."65-69" * (100000.0 / PVT_POP_TOTAL."65-69") ELSE 0 END AS "65-69",
    CASE WHEN PVT_POP_TOTAL."70-74" IS NOT NULL AND PVT_POP_TOTAL."70-74" != 0 THEN PVT_CUM_NUM_D."70-74" * (100000.0 / PVT_POP_TOTAL."70-74") ELSE 0 END AS "70-74",
    CASE WHEN PVT_POP_TOTAL."75-79" IS NOT NULL AND PVT_POP_TOTAL."75-79" != 0 THEN PVT_CUM_NUM_D."75-79" * (100000.0 / PVT_POP_TOTAL."75-79") ELSE 0 END AS "75-79",
    CASE WHEN PVT_POP_TOTAL."80-84" IS NOT NULL AND PVT_POP_TOTAL."80-84" != 0 THEN PVT_CUM_NUM_D."80-84" * (100000.0 / PVT_POP_TOTAL."80-84") ELSE 0 END AS "80-84",
    CASE WHEN PVT_POP_TOTAL."85-89" IS NOT NULL AND PVT_POP_TOTAL."85-89" != 0 THEN PVT_CUM_NUM_D."85-89" * (100000.0 / PVT_POP_TOTAL."85-89") ELSE 0 END AS "85-89",
    CASE WHEN PVT_POP_TOTAL."90-94" IS NOT NULL AND PVT_POP_TOTAL."90-94" != 0 THEN PVT_CUM_NUM_D."90-94" * (100000.0 / PVT_POP_TOTAL."90-94") ELSE 0 END AS "90-94",
    CASE WHEN PVT_POP_TOTAL."95-99" IS NOT NULL AND PVT_POP_TOTAL."95-99" != 0 THEN PVT_CUM_NUM_D."95-99" * (100000.0 / PVT_POP_TOTAL."95-99") ELSE 0 END AS "95-99",
    CASE WHEN PVT_POP_TOTAL."100-104" IS NOT NULL AND PVT_POP_TOTAL."100-104" != 0 THEN PVT_CUM_NUM_D."100-104" * (100000.0 / PVT_POP_TOTAL."100-104") ELSE 0 END AS "100-104",
    CASE WHEN PVT_POP_TOTAL."105-109" IS NOT NULL AND PVT_POP_TOTAL."105-109" != 0 THEN PVT_CUM_NUM_D."105-109" * (100000.0 / PVT_POP_TOTAL."105-109") ELSE 0 END AS "105-109",
    CASE WHEN PVT_POP_TOTAL.gr109 IS NOT NULL AND PVT_POP_TOTAL.gr109 != 0 THEN PVT_CUM_NUM_D.gr109 * (100000.0 / PVT_POP_TOTAL.gr109) ELSE 0 END AS gr109
FROM 
    PVT_CUM_NUM_D
JOIN 
    PVT_POP_TOTAL ON PVT_CUM_NUM_D.DAYS_20200101 = PVT_POP_TOTAL.DAYS_20200101;	

-- create view PVT_CUM_NUM_VX_D_NORM

DROP VIEW IF EXISTS PVT_CUM_NUM_VX_D_NORM;
CREATE VIEW PVT_CUM_NUM_VX_D_NORM AS

SELECT 
    PVT_CUM_NUM_VX_D.DAYS_20200101,
    CASE WHEN PVT_CUM_NUM_VX."0-4" IS NOT NULL AND PVT_CUM_NUM_VX."0-4" != 0 THEN PVT_CUM_NUM_VX_D."0-4" * (100000.0 / PVT_CUM_NUM_VX."0-4") ELSE 0 END AS "0-4",
    CASE WHEN PVT_CUM_NUM_VX."5-9" IS NOT NULL AND PVT_CUM_NUM_VX."5-9" != 0 THEN PVT_CUM_NUM_VX_D."5-9" * (100000.0 / PVT_CUM_NUM_VX."5-9") ELSE 0 END AS "5-9",
    CASE WHEN PVT_CUM_NUM_VX."10-14" IS NOT NULL AND PVT_CUM_NUM_VX."10-14" != 0 THEN PVT_CUM_NUM_VX_D."10-14" * (100000.0 / PVT_CUM_NUM_VX."10-14") ELSE 0 END AS "10-14",
    CASE WHEN PVT_CUM_NUM_VX."15-19" IS NOT NULL AND PVT_CUM_NUM_VX."15-19" != 0 THEN PVT_CUM_NUM_VX_D."15-19" * (100000.0 / PVT_CUM_NUM_VX."15-19") ELSE 0 END AS "15-19",
    CASE WHEN PVT_CUM_NUM_VX."20-24" IS NOT NULL AND PVT_CUM_NUM_VX."20-24" != 0 THEN PVT_CUM_NUM_VX_D."20-24" * (100000.0 / PVT_CUM_NUM_VX."20-24") ELSE 0 END AS "20-24",
    CASE WHEN PVT_CUM_NUM_VX."25-29" IS NOT NULL AND PVT_CUM_NUM_VX."25-29" != 0 THEN PVT_CUM_NUM_VX_D."25-29" * (100000.0 / PVT_CUM_NUM_VX."25-29") ELSE 0 END AS "25-29",
    CASE WHEN PVT_CUM_NUM_VX."30-34" IS NOT NULL AND PVT_CUM_NUM_VX."30-34" != 0 THEN PVT_CUM_NUM_VX_D."30-34" * (100000.0 / PVT_CUM_NUM_VX."30-34") ELSE 0 END AS "30-34",
    CASE WHEN PVT_CUM_NUM_VX."35-39" IS NOT NULL AND PVT_CUM_NUM_VX."35-39" != 0 THEN PVT_CUM_NUM_VX_D."35-39" * (100000.0 / PVT_CUM_NUM_VX."35-39") ELSE 0 END AS "35-39",
    CASE WHEN PVT_CUM_NUM_VX."40-44" IS NOT NULL AND PVT_CUM_NUM_VX."40-44" != 0 THEN PVT_CUM_NUM_VX_D."40-44" * (100000.0 / PVT_CUM_NUM_VX."40-44") ELSE 0 END AS "40-44",
    CASE WHEN PVT_CUM_NUM_VX."45-49" IS NOT NULL AND PVT_CUM_NUM_VX."45-49" != 0 THEN PVT_CUM_NUM_VX_D."45-49" * (100000.0 / PVT_CUM_NUM_VX."45-49") ELSE 0 END AS "45-49",
    CASE WHEN PVT_CUM_NUM_VX."50-54" IS NOT NULL AND PVT_CUM_NUM_VX."50-54" != 0 THEN PVT_CUM_NUM_VX_D."50-54" * (100000.0 / PVT_CUM_NUM_VX."50-54") ELSE 0 END AS "50-54",
    CASE WHEN PVT_CUM_NUM_VX."55-59" IS NOT NULL AND PVT_CUM_NUM_VX."55-59" != 0 THEN PVT_CUM_NUM_VX_D."55-59" * (100000.0 / PVT_CUM_NUM_VX."55-59") ELSE 0 END AS "55-59",
    CASE WHEN PVT_CUM_NUM_VX."60-64" IS NOT NULL AND PVT_CUM_NUM_VX."60-64" != 0 THEN PVT_CUM_NUM_VX_D."60-64" * (100000.0 / PVT_CUM_NUM_VX."60-64") ELSE 0 END AS "60-64",
    CASE WHEN PVT_CUM_NUM_VX."65-69" IS NOT NULL AND PVT_CUM_NUM_VX."65-69" != 0 THEN PVT_CUM_NUM_VX_D."65-69" * (100000.0 / PVT_CUM_NUM_VX."65-69") ELSE 0 END AS "65-69",
    CASE WHEN PVT_CUM_NUM_VX."70-74" IS NOT NULL AND PVT_CUM_NUM_VX."70-74" != 0 THEN PVT_CUM_NUM_VX_D."70-74" * (100000.0 / PVT_CUM_NUM_VX."70-74") ELSE 0 END AS "70-74",
    CASE WHEN PVT_CUM_NUM_VX."75-79" IS NOT NULL AND PVT_CUM_NUM_VX."75-79" != 0 THEN PVT_CUM_NUM_VX_D."75-79" * (100000.0 / PVT_CUM_NUM_VX."75-79") ELSE 0 END AS "75-79",
    CASE WHEN PVT_CUM_NUM_VX."80-84" IS NOT NULL AND PVT_CUM_NUM_VX."80-84" != 0 THEN PVT_CUM_NUM_VX_D."80-84" * (100000.0 / PVT_CUM_NUM_VX."80-84") ELSE 0 END AS "80-84",
    CASE WHEN PVT_CUM_NUM_VX."85-89" IS NOT NULL AND PVT_CUM_NUM_VX."85-89" != 0 THEN PVT_CUM_NUM_VX_D."85-89" * (100000.0 / PVT_CUM_NUM_VX."85-89") ELSE 0 END AS "85-89",
    CASE WHEN PVT_CUM_NUM_VX."90-94" IS NOT NULL AND PVT_CUM_NUM_VX."90-94" != 0 THEN PVT_CUM_NUM_VX_D."90-94" * (100000.0 / PVT_CUM_NUM_VX."90-94") ELSE 0 END AS "90-94",
    CASE WHEN PVT_CUM_NUM_VX."95-99" IS NOT NULL AND PVT_CUM_NUM_VX."95-99" != 0 THEN PVT_CUM_NUM_VX_D."95-99" * (100000.0 / PVT_CUM_NUM_VX."95-99") ELSE 0 END AS "95-99",
    CASE WHEN PVT_CUM_NUM_VX."100-104" IS NOT NULL AND PVT_CUM_NUM_VX."100-104" != 0 THEN PVT_CUM_NUM_VX_D."100-104" * (100000.0 / PVT_CUM_NUM_VX."100-104") ELSE 0 END AS "100-104",
    CASE WHEN PVT_CUM_NUM_VX."105-109" IS NOT NULL AND PVT_CUM_NUM_VX."105-109" != 0 THEN PVT_CUM_NUM_VX_D."105-109" * (100000.0 / PVT_CUM_NUM_VX."105-109") ELSE 0 END AS "105-109",
    CASE WHEN PVT_CUM_NUM_VX.gr109 IS NOT NULL AND PVT_CUM_NUM_VX.gr109 != 0 THEN PVT_CUM_NUM_VX_D.gr109 * (100000.0 / PVT_CUM_NUM_VX.gr109) ELSE 0 END AS gr109
FROM 
    PVT_CUM_NUM_VX_D
JOIN 
    PVT_CUM_NUM_VX ON PVT_CUM_NUM_VX_D.DAYS_20200101 = PVT_CUM_NUM_VX.DAYS_20200101;

-- create view PVT_CUM_NUM_UVX_D_NORM

DROP VIEW IF EXISTS PVT_CUM_NUM_UVX_D_NORM;
CREATE VIEW PVT_CUM_NUM_UVX_D_NORM AS

SELECT 
    PVT_CUM_NUM_UVX_D.DAYS_20200101,
    CASE WHEN PVT_CUM_NUM_UVX."0-4" IS NOT NULL AND PVT_CUM_NUM_UVX."0-4" != 0 THEN PVT_CUM_NUM_UVX_D."0-4" * (100000.0 / PVT_CUM_NUM_UVX."0-4") ELSE 0 END AS "0-4",
    CASE WHEN PVT_CUM_NUM_UVX."5-9" IS NOT NULL AND PVT_CUM_NUM_UVX."5-9" != 0 THEN PVT_CUM_NUM_UVX_D."5-9" * (100000.0 / PVT_CUM_NUM_UVX."5-9") ELSE 0 END AS "5-9",
    CASE WHEN PVT_CUM_NUM_UVX."10-14" IS NOT NULL AND PVT_CUM_NUM_UVX."10-14" != 0 THEN PVT_CUM_NUM_UVX_D."10-14" * (100000.0 / PVT_CUM_NUM_UVX."10-14") ELSE 0 END AS "10-14",
    CASE WHEN PVT_CUM_NUM_UVX."15-19" IS NOT NULL AND PVT_CUM_NUM_UVX."15-19" != 0 THEN PVT_CUM_NUM_UVX_D."15-19" * (100000.0 / PVT_CUM_NUM_UVX."15-19") ELSE 0 END AS "15-19",
    CASE WHEN PVT_CUM_NUM_UVX."20-24" IS NOT NULL AND PVT_CUM_NUM_UVX."20-24" != 0 THEN PVT_CUM_NUM_UVX_D."20-24" * (100000.0 / PVT_CUM_NUM_UVX."20-24") ELSE 0 END AS "20-24",
    CASE WHEN PVT_CUM_NUM_UVX."25-29" IS NOT NULL AND PVT_CUM_NUM_UVX."25-29" != 0 THEN PVT_CUM_NUM_UVX_D."25-29" * (100000.0 / PVT_CUM_NUM_UVX."25-29") ELSE 0 END AS "25-29",
    CASE WHEN PVT_CUM_NUM_UVX."30-34" IS NOT NULL AND PVT_CUM_NUM_UVX."30-34" != 0 THEN PVT_CUM_NUM_UVX_D."30-34" * (100000.0 / PVT_CUM_NUM_UVX."30-34") ELSE 0 END AS "30-34",
    CASE WHEN PVT_CUM_NUM_UVX."35-39" IS NOT NULL AND PVT_CUM_NUM_UVX."35-39" != 0 THEN PVT_CUM_NUM_UVX_D."35-39" * (100000.0 / PVT_CUM_NUM_UVX."35-39") ELSE 0 END AS "35-39",
    CASE WHEN PVT_CUM_NUM_UVX."40-44" IS NOT NULL AND PVT_CUM_NUM_UVX."40-44" != 0 THEN PVT_CUM_NUM_UVX_D."40-44" * (100000.0 / PVT_CUM_NUM_UVX."40-44") ELSE 0 END AS "40-44",
    CASE WHEN PVT_CUM_NUM_UVX."45-49" IS NOT NULL AND PVT_CUM_NUM_UVX."45-49" != 0 THEN PVT_CUM_NUM_UVX_D."45-49" * (100000.0 / PVT_CUM_NUM_UVX."45-49") ELSE 0 END AS "45-49",
    CASE WHEN PVT_CUM_NUM_UVX."50-54" IS NOT NULL AND PVT_CUM_NUM_UVX."50-54" != 0 THEN PVT_CUM_NUM_UVX_D."50-54" * (100000.0 / PVT_CUM_NUM_UVX."50-54") ELSE 0 END AS "50-54",
    CASE WHEN PVT_CUM_NUM_UVX."55-59" IS NOT NULL AND PVT_CUM_NUM_UVX."55-59" != 0 THEN PVT_CUM_NUM_UVX_D."55-59" * (100000.0 / PVT_CUM_NUM_UVX."55-59") ELSE 0 END AS "55-59",
    CASE WHEN PVT_CUM_NUM_UVX."60-64" IS NOT NULL AND PVT_CUM_NUM_UVX."60-64" != 0 THEN PVT_CUM_NUM_UVX_D."60-64" * (100000.0 / PVT_CUM_NUM_UVX."60-64") ELSE 0 END AS "60-64",
    CASE WHEN PVT_CUM_NUM_UVX."65-69" IS NOT NULL AND PVT_CUM_NUM_UVX."65-69" != 0 THEN PVT_CUM_NUM_UVX_D."65-69" * (100000.0 / PVT_CUM_NUM_UVX."65-69") ELSE 0 END AS "65-69",
    CASE WHEN PVT_CUM_NUM_UVX."70-74" IS NOT NULL AND PVT_CUM_NUM_UVX."70-74" != 0 THEN PVT_CUM_NUM_UVX_D."70-74" * (100000.0 / PVT_CUM_NUM_UVX."70-74") ELSE 0 END AS "70-74",
    CASE WHEN PVT_CUM_NUM_UVX."75-79" IS NOT NULL AND PVT_CUM_NUM_UVX."75-79" != 0 THEN PVT_CUM_NUM_UVX_D."75-79" * (100000.0 / PVT_CUM_NUM_UVX."75-79") ELSE 0 END AS "75-79",
    CASE WHEN PVT_CUM_NUM_UVX."80-84" IS NOT NULL AND PVT_CUM_NUM_UVX."80-84" != 0 THEN PVT_CUM_NUM_UVX_D."80-84" * (100000.0 / PVT_CUM_NUM_UVX."80-84") ELSE 0 END AS "80-84",
    CASE WHEN PVT_CUM_NUM_UVX."85-89" IS NOT NULL AND PVT_CUM_NUM_UVX."85-89" != 0 THEN PVT_CUM_NUM_UVX_D."85-89" * (100000.0 / PVT_CUM_NUM_UVX."85-89") ELSE 0 END AS "85-89",
    CASE WHEN PVT_CUM_NUM_UVX."90-94" IS NOT NULL AND PVT_CUM_NUM_UVX."90-94" != 0 THEN PVT_CUM_NUM_UVX_D."90-94" * (100000.0 / PVT_CUM_NUM_UVX."90-94") ELSE 0 END AS "90-94",
    CASE WHEN PVT_CUM_NUM_UVX."95-99" IS NOT NULL AND PVT_CUM_NUM_UVX."95-99" != 0 THEN PVT_CUM_NUM_UVX_D."95-99" * (100000.0 / PVT_CUM_NUM_UVX."95-99") ELSE 0 END AS "95-99",
    CASE WHEN PVT_CUM_NUM_UVX."100-104" IS NOT NULL AND PVT_CUM_NUM_UVX."100-104" != 0 THEN PVT_CUM_NUM_UVX_D."100-104" * (100000.0 / PVT_CUM_NUM_UVX."100-104") ELSE 0 END AS "100-104",
    CASE WHEN PVT_CUM_NUM_UVX."105-109" IS NOT NULL AND PVT_CUM_NUM_UVX."105-109" != 0 THEN PVT_CUM_NUM_UVX_D."105-109" * (100000.0 / PVT_CUM_NUM_UVX."105-109") ELSE 0 END AS "105-109",
    CASE WHEN PVT_CUM_NUM_UVX.gr109 IS NOT NULL AND PVT_CUM_NUM_UVX.gr109 != 0 THEN PVT_CUM_NUM_UVX_D.gr109 * (100000.0 / PVT_CUM_NUM_UVX.gr109) ELSE 0 END AS gr109
FROM 
    PVT_CUM_NUM_UVX_D
JOIN 
    PVT_CUM_NUM_UVX ON PVT_CUM_NUM_UVX_D.DAYS_20200101 = PVT_CUM_NUM_UVX.DAYS_20200101;

-- create view PVT_NUM_D_NORM
	
DROP VIEW IF EXISTS PVT_NUM_D_NORM;
CREATE VIEW PVT_NUM_D_NORM AS

SELECT 
    PVT_NUM_D.DAYS_20200101,
    CASE WHEN PVT_POP_TOTAL."0-4" IS NOT NULL AND PVT_POP_TOTAL."0-4" != 0 THEN PVT_NUM_D."0-4" * (100000.0 / PVT_POP_TOTAL."0-4") ELSE 0 END AS "0-4",
    CASE WHEN PVT_POP_TOTAL."5-9" IS NOT NULL AND PVT_POP_TOTAL."5-9" != 0 THEN PVT_NUM_D."5-9" * (100000.0 / PVT_POP_TOTAL."5-9") ELSE 0 END AS "5-9",
    CASE WHEN PVT_POP_TOTAL."10-14" IS NOT NULL AND PVT_POP_TOTAL."10-14" != 0 THEN PVT_NUM_D."10-14" * (100000.0 / PVT_POP_TOTAL."10-14") ELSE 0 END AS "10-14",
    CASE WHEN PVT_POP_TOTAL."15-19" IS NOT NULL AND PVT_POP_TOTAL."15-19" != 0 THEN PVT_NUM_D."15-19" * (100000.0 / PVT_POP_TOTAL."15-19") ELSE 0 END AS "15-19",
    CASE WHEN PVT_POP_TOTAL."20-24" IS NOT NULL AND PVT_POP_TOTAL."20-24" != 0 THEN PVT_NUM_D."20-24" * (100000.0 / PVT_POP_TOTAL."20-24") ELSE 0 END AS "20-24",
    CASE WHEN PVT_POP_TOTAL."25-29" IS NOT NULL AND PVT_POP_TOTAL."25-29" != 0 THEN PVT_NUM_D."25-29" * (100000.0 / PVT_POP_TOTAL."25-29") ELSE 0 END AS "25-29",
    CASE WHEN PVT_POP_TOTAL."30-34" IS NOT NULL AND PVT_POP_TOTAL."30-34" != 0 THEN PVT_NUM_D."30-34" * (100000.0 / PVT_POP_TOTAL."30-34") ELSE 0 END AS "30-34",
    CASE WHEN PVT_POP_TOTAL."35-39" IS NOT NULL AND PVT_POP_TOTAL."35-39" != 0 THEN PVT_NUM_D."35-39" * (100000.0 / PVT_POP_TOTAL."35-39") ELSE 0 END AS "35-39",
    CASE WHEN PVT_POP_TOTAL."40-44" IS NOT NULL AND PVT_POP_TOTAL."40-44" != 0 THEN PVT_NUM_D."40-44" * (100000.0 / PVT_POP_TOTAL."40-44") ELSE 0 END AS "40-44",
    CASE WHEN PVT_POP_TOTAL."45-49" IS NOT NULL AND PVT_POP_TOTAL."45-49" != 0 THEN PVT_NUM_D."45-49" * (100000.0 / PVT_POP_TOTAL."45-49") ELSE 0 END AS "45-49",
    CASE WHEN PVT_POP_TOTAL."50-54" IS NOT NULL AND PVT_POP_TOTAL."50-54" != 0 THEN PVT_NUM_D."50-54" * (100000.0 / PVT_POP_TOTAL."50-54") ELSE 0 END AS "50-54",
    CASE WHEN PVT_POP_TOTAL."55-59" IS NOT NULL AND PVT_POP_TOTAL."55-59" != 0 THEN PVT_NUM_D."55-59" * (100000.0 / PVT_POP_TOTAL."55-59") ELSE 0 END AS "55-59",
    CASE WHEN PVT_POP_TOTAL."60-64" IS NOT NULL AND PVT_POP_TOTAL."60-64" != 0 THEN PVT_NUM_D."60-64" * (100000.0 / PVT_POP_TOTAL."60-64") ELSE 0 END AS "60-64",
    CASE WHEN PVT_POP_TOTAL."65-69" IS NOT NULL AND PVT_POP_TOTAL."65-69" != 0 THEN PVT_NUM_D."65-69" * (100000.0 / PVT_POP_TOTAL."65-69") ELSE 0 END AS "65-69",
    CASE WHEN PVT_POP_TOTAL."70-74" IS NOT NULL AND PVT_POP_TOTAL."70-74" != 0 THEN PVT_NUM_D."70-74" * (100000.0 / PVT_POP_TOTAL."70-74") ELSE 0 END AS "70-74",
    CASE WHEN PVT_POP_TOTAL."75-79" IS NOT NULL AND PVT_POP_TOTAL."75-79" != 0 THEN PVT_NUM_D."75-79" * (100000.0 / PVT_POP_TOTAL."75-79") ELSE 0 END AS "75-79",
    CASE WHEN PVT_POP_TOTAL."80-84" IS NOT NULL AND PVT_POP_TOTAL."80-84" != 0 THEN PVT_NUM_D."80-84" * (100000.0 / PVT_POP_TOTAL."80-84") ELSE 0 END AS "80-84",
    CASE WHEN PVT_POP_TOTAL."85-89" IS NOT NULL AND PVT_POP_TOTAL."85-89" != 0 THEN PVT_NUM_D."85-89" * (100000.0 / PVT_POP_TOTAL."85-89") ELSE 0 END AS "85-89",
    CASE WHEN PVT_POP_TOTAL."90-94" IS NOT NULL AND PVT_POP_TOTAL."90-94" != 0 THEN PVT_NUM_D."90-94" * (100000.0 / PVT_POP_TOTAL."90-94") ELSE 0 END AS "90-94",
    CASE WHEN PVT_POP_TOTAL."95-99" IS NOT NULL AND PVT_POP_TOTAL."95-99" != 0 THEN PVT_NUM_D."95-99" * (100000.0 / PVT_POP_TOTAL."95-99") ELSE 0 END AS "95-99",
    CASE WHEN PVT_POP_TOTAL."100-104" IS NOT NULL AND PVT_POP_TOTAL."100-104" != 0 THEN PVT_NUM_D."100-104" * (100000.0 / PVT_POP_TOTAL."100-104") ELSE 0 END AS "100-104",
    CASE WHEN PVT_POP_TOTAL."105-109" IS NOT NULL AND PVT_POP_TOTAL."105-109" != 0 THEN PVT_NUM_D."105-109" * (100000.0 / PVT_POP_TOTAL."105-109") ELSE 0 END AS "105-109",
    CASE WHEN PVT_POP_TOTAL.gr109 IS NOT NULL AND PVT_POP_TOTAL.gr109 != 0 THEN PVT_NUM_D.gr109 * (100000.0 / PVT_POP_TOTAL.gr109) ELSE 0 END AS gr109
FROM 
    PVT_NUM_D
JOIN 
    PVT_POP_TOTAL ON PVT_NUM_D.DAYS_20200101 = PVT_POP_TOTAL.DAYS_20200101;

-- create view PVT_NUM_VX_D_NORM
	
DROP VIEW IF EXISTS PVT_NUM_VX_D_NORM;
CREATE VIEW PVT_NUM_VX_D_NORM AS

SELECT 
    PVT_NUM_VX_D.DAYS_20200101,
    CASE WHEN PVT_CUM_NUM_VX."0-4" IS NOT NULL AND PVT_CUM_NUM_VX."0-4" != 0 THEN PVT_NUM_VX_D."0-4" * (100000.0 / PVT_CUM_NUM_VX."0-4") ELSE 0 END AS "0-4",
    CASE WHEN PVT_CUM_NUM_VX."5-9" IS NOT NULL AND PVT_CUM_NUM_VX."5-9" != 0 THEN PVT_NUM_VX_D."5-9" * (100000.0 / PVT_CUM_NUM_VX."5-9") ELSE 0 END AS "5-9",
    CASE WHEN PVT_CUM_NUM_VX."10-14" IS NOT NULL AND PVT_CUM_NUM_VX."10-14" != 0 THEN PVT_NUM_VX_D."10-14" * (100000.0 / PVT_CUM_NUM_VX."10-14") ELSE 0 END AS "10-14",
    CASE WHEN PVT_CUM_NUM_VX."15-19" IS NOT NULL AND PVT_CUM_NUM_VX."15-19" != 0 THEN PVT_NUM_VX_D."15-19" * (100000.0 / PVT_CUM_NUM_VX."15-19") ELSE 0 END AS "15-19",
    CASE WHEN PVT_CUM_NUM_VX."20-24" IS NOT NULL AND PVT_CUM_NUM_VX."20-24" != 0 THEN PVT_NUM_VX_D."20-24" * (100000.0 / PVT_CUM_NUM_VX."20-24") ELSE 0 END AS "20-24",
    CASE WHEN PVT_CUM_NUM_VX."25-29" IS NOT NULL AND PVT_CUM_NUM_VX."25-29" != 0 THEN PVT_NUM_VX_D."25-29" * (100000.0 / PVT_CUM_NUM_VX."25-29") ELSE 0 END AS "25-29",
    CASE WHEN PVT_CUM_NUM_VX."30-34" IS NOT NULL AND PVT_CUM_NUM_VX."30-34" != 0 THEN PVT_NUM_VX_D."30-34" * (100000.0 / PVT_CUM_NUM_VX."30-34") ELSE 0 END AS "30-34",
    CASE WHEN PVT_CUM_NUM_VX."35-39" IS NOT NULL AND PVT_CUM_NUM_VX."35-39" != 0 THEN PVT_NUM_VX_D."35-39" * (100000.0 / PVT_CUM_NUM_VX."35-39") ELSE 0 END AS "35-39",
    CASE WHEN PVT_CUM_NUM_VX."40-44" IS NOT NULL AND PVT_CUM_NUM_VX."40-44" != 0 THEN PVT_NUM_VX_D."40-44" * (100000.0 / PVT_CUM_NUM_VX."40-44") ELSE 0 END AS "40-44",
    CASE WHEN PVT_CUM_NUM_VX."45-49" IS NOT NULL AND PVT_CUM_NUM_VX."45-49" != 0 THEN PVT_NUM_VX_D."45-49" * (100000.0 / PVT_CUM_NUM_VX."45-49") ELSE 0 END AS "45-49",
    CASE WHEN PVT_CUM_NUM_VX."50-54" IS NOT NULL AND PVT_CUM_NUM_VX."50-54" != 0 THEN PVT_NUM_VX_D."50-54" * (100000.0 / PVT_CUM_NUM_VX."50-54") ELSE 0 END AS "50-54",
    CASE WHEN PVT_CUM_NUM_VX."55-59" IS NOT NULL AND PVT_CUM_NUM_VX."55-59" != 0 THEN PVT_NUM_VX_D."55-59" * (100000.0 / PVT_CUM_NUM_VX."55-59") ELSE 0 END AS "55-59",
    CASE WHEN PVT_CUM_NUM_VX."60-64" IS NOT NULL AND PVT_CUM_NUM_VX."60-64" != 0 THEN PVT_NUM_VX_D."60-64" * (100000.0 / PVT_CUM_NUM_VX."60-64") ELSE 0 END AS "60-64",
    CASE WHEN PVT_CUM_NUM_VX."65-69" IS NOT NULL AND PVT_CUM_NUM_VX."65-69" != 0 THEN PVT_NUM_VX_D."65-69" * (100000.0 / PVT_CUM_NUM_VX."65-69") ELSE 0 END AS "65-69",
    CASE WHEN PVT_CUM_NUM_VX."70-74" IS NOT NULL AND PVT_CUM_NUM_VX."70-74" != 0 THEN PVT_NUM_VX_D."70-74" * (100000.0 / PVT_CUM_NUM_VX."70-74") ELSE 0 END AS "70-74",
    CASE WHEN PVT_CUM_NUM_VX."75-79" IS NOT NULL AND PVT_CUM_NUM_VX."75-79" != 0 THEN PVT_NUM_VX_D."75-79" * (100000.0 / PVT_CUM_NUM_VX."75-79") ELSE 0 END AS "75-79",
    CASE WHEN PVT_CUM_NUM_VX."80-84" IS NOT NULL AND PVT_CUM_NUM_VX."80-84" != 0 THEN PVT_NUM_VX_D."80-84" * (100000.0 / PVT_CUM_NUM_VX."80-84") ELSE 0 END AS "80-84",
    CASE WHEN PVT_CUM_NUM_VX."85-89" IS NOT NULL AND PVT_CUM_NUM_VX."85-89" != 0 THEN PVT_NUM_VX_D."85-89" * (100000.0 / PVT_CUM_NUM_VX."85-89") ELSE 0 END AS "85-89",
    CASE WHEN PVT_CUM_NUM_VX."90-94" IS NOT NULL AND PVT_CUM_NUM_VX."90-94" != 0 THEN PVT_NUM_VX_D."90-94" * (100000.0 / PVT_CUM_NUM_VX."90-94") ELSE 0 END AS "90-94",
    CASE WHEN PVT_CUM_NUM_VX."95-99" IS NOT NULL AND PVT_CUM_NUM_VX."95-99" != 0 THEN PVT_NUM_VX_D."95-99" * (100000.0 / PVT_CUM_NUM_VX."95-99") ELSE 0 END AS "95-99",
    CASE WHEN PVT_CUM_NUM_VX."100-104" IS NOT NULL AND PVT_CUM_NUM_VX."100-104" != 0 THEN PVT_NUM_VX_D."100-104" * (100000.0 / PVT_CUM_NUM_VX."100-104") ELSE 0 END AS "100-104",
    CASE WHEN PVT_CUM_NUM_VX."105-109" IS NOT NULL AND PVT_CUM_NUM_VX."105-109" != 0 THEN PVT_NUM_VX_D."105-109" * (100000.0 / PVT_CUM_NUM_VX."105-109") ELSE 0 END AS "105-109",
    CASE WHEN PVT_CUM_NUM_VX.gr109 IS NOT NULL AND PVT_CUM_NUM_VX.gr109 != 0 THEN PVT_NUM_VX_D.gr109 * (100000.0 / PVT_CUM_NUM_VX.gr109) ELSE 0 END AS gr109
FROM 
    PVT_NUM_VX_D
JOIN 
    PVT_CUM_NUM_VX ON PVT_NUM_VX_D.DAYS_20200101 = PVT_CUM_NUM_VX.DAYS_20200101;

-- create view PVT_NUM_UVX_D_NORM
	
DROP VIEW IF EXISTS PVT_NUM_UVX_D_NORM;
CREATE VIEW PVT_NUM_UVX_D_NORM AS

SELECT 
    PVT_NUM_UVX_D.DAYS_20200101,
    CASE WHEN PVT_CUM_NUM_UVX."0-4" IS NOT NULL AND PVT_CUM_NUM_UVX."0-4" != 0 THEN PVT_NUM_UVX_D."0-4" * (100000.0 / PVT_CUM_NUM_UVX."0-4") ELSE 0 END AS "0-4",
    CASE WHEN PVT_CUM_NUM_UVX."5-9" IS NOT NULL AND PVT_CUM_NUM_UVX."5-9" != 0 THEN PVT_NUM_UVX_D."5-9" * (100000.0 / PVT_CUM_NUM_UVX."5-9") ELSE 0 END AS "5-9",
    CASE WHEN PVT_CUM_NUM_UVX."10-14" IS NOT NULL AND PVT_CUM_NUM_UVX."10-14" != 0 THEN PVT_NUM_UVX_D."10-14" * (100000.0 / PVT_CUM_NUM_UVX."10-14") ELSE 0 END AS "10-14",
    CASE WHEN PVT_CUM_NUM_UVX."15-19" IS NOT NULL AND PVT_CUM_NUM_UVX."15-19" != 0 THEN PVT_NUM_UVX_D."15-19" * (100000.0 / PVT_CUM_NUM_UVX."15-19") ELSE 0 END AS "15-19",
    CASE WHEN PVT_CUM_NUM_UVX."20-24" IS NOT NULL AND PVT_CUM_NUM_UVX."20-24" != 0 THEN PVT_NUM_UVX_D."20-24" * (100000.0 / PVT_CUM_NUM_UVX."20-24") ELSE 0 END AS "20-24",
    CASE WHEN PVT_CUM_NUM_UVX."25-29" IS NOT NULL AND PVT_CUM_NUM_UVX."25-29" != 0 THEN PVT_NUM_UVX_D."25-29" * (100000.0 / PVT_CUM_NUM_UVX."25-29") ELSE 0 END AS "25-29",
    CASE WHEN PVT_CUM_NUM_UVX."30-34" IS NOT NULL AND PVT_CUM_NUM_UVX."30-34" != 0 THEN PVT_NUM_UVX_D."30-34" * (100000.0 / PVT_CUM_NUM_UVX."30-34") ELSE 0 END AS "30-34",
    CASE WHEN PVT_CUM_NUM_UVX."35-39" IS NOT NULL AND PVT_CUM_NUM_UVX."35-39" != 0 THEN PVT_NUM_UVX_D."35-39" * (100000.0 / PVT_CUM_NUM_UVX."35-39") ELSE 0 END AS "35-39",
    CASE WHEN PVT_CUM_NUM_UVX."40-44" IS NOT NULL AND PVT_CUM_NUM_UVX."40-44" != 0 THEN PVT_NUM_UVX_D."40-44" * (100000.0 / PVT_CUM_NUM_UVX."40-44") ELSE 0 END AS "40-44",
    CASE WHEN PVT_CUM_NUM_UVX."45-49" IS NOT NULL AND PVT_CUM_NUM_UVX."45-49" != 0 THEN PVT_NUM_UVX_D."45-49" * (100000.0 / PVT_CUM_NUM_UVX."45-49") ELSE 0 END AS "45-49",
    CASE WHEN PVT_CUM_NUM_UVX."50-54" IS NOT NULL AND PVT_CUM_NUM_UVX."50-54" != 0 THEN PVT_NUM_UVX_D."50-54" * (100000.0 / PVT_CUM_NUM_UVX."50-54") ELSE 0 END AS "50-54",
    CASE WHEN PVT_CUM_NUM_UVX."55-59" IS NOT NULL AND PVT_CUM_NUM_UVX."55-59" != 0 THEN PVT_NUM_UVX_D."55-59" * (100000.0 / PVT_CUM_NUM_UVX."55-59") ELSE 0 END AS "55-59",
    CASE WHEN PVT_CUM_NUM_UVX."60-64" IS NOT NULL AND PVT_CUM_NUM_UVX."60-64" != 0 THEN PVT_NUM_UVX_D."60-64" * (100000.0 / PVT_CUM_NUM_UVX."60-64") ELSE 0 END AS "60-64",
    CASE WHEN PVT_CUM_NUM_UVX."65-69" IS NOT NULL AND PVT_CUM_NUM_UVX."65-69" != 0 THEN PVT_NUM_UVX_D."65-69" * (100000.0 / PVT_CUM_NUM_UVX."65-69") ELSE 0 END AS "65-69",
    CASE WHEN PVT_CUM_NUM_UVX."70-74" IS NOT NULL AND PVT_CUM_NUM_UVX."70-74" != 0 THEN PVT_NUM_UVX_D."70-74" * (100000.0 / PVT_CUM_NUM_UVX."70-74") ELSE 0 END AS "70-74",
    CASE WHEN PVT_CUM_NUM_UVX."75-79" IS NOT NULL AND PVT_CUM_NUM_UVX."75-79" != 0 THEN PVT_NUM_UVX_D."75-79" * (100000.0 / PVT_CUM_NUM_UVX."75-79") ELSE 0 END AS "75-79",
    CASE WHEN PVT_CUM_NUM_UVX."80-84" IS NOT NULL AND PVT_CUM_NUM_UVX."80-84" != 0 THEN PVT_NUM_UVX_D."80-84" * (100000.0 / PVT_CUM_NUM_UVX."80-84") ELSE 0 END AS "80-84",
    CASE WHEN PVT_CUM_NUM_UVX."85-89" IS NOT NULL AND PVT_CUM_NUM_UVX."85-89" != 0 THEN PVT_NUM_UVX_D."85-89" * (100000.0 / PVT_CUM_NUM_UVX."85-89") ELSE 0 END AS "85-89",
    CASE WHEN PVT_CUM_NUM_UVX."90-94" IS NOT NULL AND PVT_CUM_NUM_UVX."90-94" != 0 THEN PVT_NUM_UVX_D."90-94" * (100000.0 / PVT_CUM_NUM_UVX."90-94") ELSE 0 END AS "90-94",
    CASE WHEN PVT_CUM_NUM_UVX."95-99" IS NOT NULL AND PVT_CUM_NUM_UVX."95-99" != 0 THEN PVT_NUM_UVX_D."95-99" * (100000.0 / PVT_CUM_NUM_UVX."95-99") ELSE 0 END AS "95-99",
    CASE WHEN PVT_CUM_NUM_UVX."100-104" IS NOT NULL AND PVT_CUM_NUM_UVX."100-104" != 0 THEN PVT_NUM_UVX_D."100-104" * (100000.0 / PVT_CUM_NUM_UVX."100-104") ELSE 0 END AS "100-104",
    CASE WHEN PVT_CUM_NUM_UVX."105-109" IS NOT NULL AND PVT_CUM_NUM_UVX."105-109" != 0 THEN PVT_NUM_UVX_D."105-109" * (100000.0 / PVT_CUM_NUM_UVX."105-109") ELSE 0 END AS "105-109",
    CASE WHEN PVT_CUM_NUM_UVX.gr109 IS NOT NULL AND PVT_CUM_NUM_UVX.gr109 != 0 THEN PVT_NUM_UVX_D.gr109 * (100000.0 / PVT_CUM_NUM_UVX.gr109) ELSE 0 END AS gr109
FROM 
    PVT_NUM_UVX_D
JOIN 
    PVT_CUM_NUM_UVX ON PVT_NUM_UVX_D.DAYS_20200101 = PVT_CUM_NUM_UVX.DAYS_20200101;
	
-- create view PVT_POP_TOTAL_MINUS_D

DROP VIEW IF EXISTS PVT_POP_TOTAL_MINUS_D;	
CREATE VIEW PVT_POP_TOTAL_MINUS_D AS
SELECT 
    t1.DAYS_20200101,
    t1."0-4" - t2."0-4" AS "0-4",
    t1."5-9" - t2."5-9" AS "5-9",
    t1."10-14" - t2."10-14" AS "10-14",
    t1."15-19" - t2."15-19" AS "15-19",
    t1."20-24" - t2."20-24" AS "20-24",
    t1."25-29" - t2."25-29" AS "25-29",
    t1."30-34" - t2."30-34" AS "30-34",
    t1."35-39" - t2."35-39" AS "35-39",
    t1."40-44" - t2."40-44" AS "40-44",
    t1."45-49" - t2."45-49" AS "45-49",
    t1."50-54" - t2."50-54" AS "50-54",
    t1."55-59" - t2."55-59" AS "55-59",
    t1."60-64" - t2."60-64" AS "60-64",
    t1."65-69" - t2."65-69" AS "65-69",
    t1."70-74" - t2."70-74" AS "70-74",
    t1."75-79" - t2."75-79" AS "75-79",
    t1."80-84" - t2."80-84" AS "80-84",
    t1."85-89" - t2."85-89" AS "85-89",
    t1."90-94" - t2."90-94" AS "90-94",
    t1."95-99" - t2."95-99" AS "95-99",
    t1."100-104" - t2."100-104" AS "100-104",
    t1."105-109" - t2."105-109" AS "105-109",
    t1.gr109 - t2.gr109 AS gr109
FROM 
    PVT_POP_TOTAL t1
JOIN 
    PVT_CUM_NUM_D t2
ON 
    t1.DAYS_20200101 = t2.DAYS_20200101;

-- create view AGE_2023_DAYS_D_NUM_D to use for AH) 3D Surface mesh.py plot

DROP VIEW IF EXISTS AGE_2023_DAYS_D_NUM_D;	
CREATE VIEW AGE_2023_DAYS_D_NUM_D AS

select AGE_2023, DAYSD_20200101,NUM_D FROM DAYS_AGE_RANGE WHERE DAYSD_20200101 IS NOT NULL ;

-- create view AGE_2023_DAYS_D_NUM_UVX_D to use for AH) 3D Surface mesh.py plot

DROP VIEW IF EXISTS AGE_2023_DAYS_D_NUM_UVX_D;
CREATE VIEW AGE_2023_DAYS_D_NUM_UVX_D AS

select AGE_2023, DAYSD_20200101,NUM_UVX_D FROM DAYS_AGE_RANGE WHERE NUM_UVX_D IS NOT NULL AND DAYSD_20200101 IS NOT NULL;

-- create view AGE_2023_DAYS_D_NUM_VX_D to use for AH) 3D Surface mesh.py plot

DROP VIEW IF EXISTS AGE_2023_DAYS_D_NUM_VX_D;	
CREATE VIEW AGE_2023_DAYS_D_NUM_VX_D AS

select AGE_2023, DAYSD_20200101,NUM_VX_D FROM DAYS_AGE_RANGE WHERE NUM_VX_D IS NOT NULL AND DAYSD_20200101 IS NOT NULL;